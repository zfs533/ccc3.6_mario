{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/ui/uiManager.ts"],"names":["_decorator","Component","tween","UIOpacity","director","cfgLevel","clientEvent","Constant","resourceUtil","roleManager","ccclass","property","uiManager","start","on","EVENT_TYPE","TranslateScenes","evtTranslateScens","_init","onDestroy","off","node","getComponent","to","opacity","call","loadScene","map","roleMgr","Inst","level_data","data","bigLevel","smallLevel","sonLevel","isInHole","createMap","createUI"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;;AACjDC,MAAAA,Q;;AACEC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;2BAGjBY,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BX,SAD/B,CACyC;AACrCY,QAAAA,KAAK,GAAG;AACJ;AAAA;AAAA,0CAAYC,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBC,eAAnC,EAAmD,KAAKC,iBAAxD,EAA0E,IAA1E;;AACA,eAAKC,KAAL;AACH;;AAEDC,QAAAA,SAAS,GAAE;AACP;AAAA;AAAA,0CAAYC,GAAZ,CAAgB;AAAA;AAAA,oCAASL,UAAT,CAAoBC,eAApC,EAAoD,KAAKC,iBAAzD,EAA2E,IAA3E;AACH;;AAEDA,QAAAA,iBAAiB,GAAE;AACff,UAAAA,KAAK,CAAC,KAAKmB,IAAL,CAAUC,YAAV,CAAuBnB,SAAvB,CAAD,CAAL,CAAyCoB,EAAzC,CAA4C,CAA5C,EAA8C;AAACC,YAAAA,OAAO,EAAC;AAAT,WAA9C,EAA2DC,IAA3D,CAAgE,MAAI;AAChErB,YAAAA,QAAQ,CAACsB,SAAT,CAAmB,WAAnB;AACH,WAFD,EAEGb,KAFH;AAGH;;AAEDK,QAAAA,KAAK,GAAE;AACH,cAAIS,GAAG,GAAG,KAAV;AACA,cAAIC,OAAO,GAAG;AAAA;AAAA,0CAAYC,IAA1B;AACA,cAAIC,UAAU,GAAG;AAAA;AAAA,oCAASC,IAAT,CAAcH,OAAO,CAACI,QAAtB,EAAgCJ,OAAO,CAACK,UAAxC,EAAoDL,OAAO,CAACM,QAA5D,CAAjB;;AACA,cAAG,CAAC;AAAA;AAAA,0CAAYL,IAAZ,CAAiBM,QAArB,EAA8B;AAC1BR,YAAAA,GAAG,GAAGG,UAAU,CAACH,GAAjB;AACH,WAFD,MAEO,CAEN;;AACD;AAAA;AAAA,4CAAaS,SAAb,CAAuBN,UAAU,CAACH,GAAlC,EAAsC,MAAI;AACtC;AAAA;AAAA,8CAAaU,QAAb,CAAsB,UAAtB,EAAiC,MAAI,CAAE,CAAvC,EAAwC,KAAKhB,IAA7C;AACH,WAFD,EAEE,KAAKA,IAFP;AAGH;;AA5BoC,O","sourcesContent":["import { _decorator, Component, Node, tween, UIOpacity, director } from 'cc';\r\nimport cfgLevel from '../../config/cfgLevel';\r\nimport { clientEvent } from '../../framework/clientEvent';\r\nimport { Constant } from '../../framework/constant';\r\nimport { resourceUtil } from '../../framework/resourceUtil';\r\nimport { roleManager } from '../roles/roleManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('uiManager')\r\nexport class uiManager extends Component {\r\n    start() {\r\n        clientEvent.on(Constant.EVENT_TYPE.TranslateScenes,this.evtTranslateScens,this);\r\n        this._init();\r\n    }\r\n\r\n    onDestroy(){\r\n        clientEvent.off(Constant.EVENT_TYPE.TranslateScenes,this.evtTranslateScens,this);\r\n    }\r\n\r\n    evtTranslateScens(){\r\n        tween(this.node.getComponent(UIOpacity)).to(1,{opacity:0}).call(()=>{\r\n            director.loadScene(\"translate\");\r\n        }).start();\r\n    }\r\n\r\n    _init(){\r\n        let map = \"map\";\r\n        let roleMgr = roleManager.Inst;\r\n        let level_data = cfgLevel.data[roleMgr.bigLevel][roleMgr.smallLevel][roleMgr.sonLevel];\r\n        if(!roleManager.Inst.isInHole){\r\n            map = level_data.map;\r\n        } else {\r\n            \r\n        }\r\n        resourceUtil.createMap(level_data.map,()=>{\r\n            resourceUtil.createUI(\"joystick\",()=>{},this.node);\r\n        },this.node);\r\n    }\r\n}\r\n\r\n"]}