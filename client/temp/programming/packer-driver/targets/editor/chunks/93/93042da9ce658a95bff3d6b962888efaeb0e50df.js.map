{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/ui/map/camera.ts"],"names":["_decorator","Component","view","v3","Vec3","clientEvent","Constant","ccclass","property","camera","_winSize","getVisibleSize","_originPos","start","_init","_addListener","console","log","node","getPosition","on","EVENT_TYPE","MoveCamera","_evtMoveCamera","InitCameraPos","_evtInitCameraPos","StopCamera","_evtStopCamera","onDestroy","off","rolePos","pos","x","y","z","setPosition","params","offset","gap","width","CurMapWidth","_startMove","dispatchEvent","MoveJoystick"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, view, v3, Vec3, TERRAIN_HEIGHT_BASE } from 'cc';\r\nimport { clientEvent } from '../../../framework/clientEvent';\r\nimport { Constant } from '../../../framework/constant';\r\nimport { roleManager } from '../../roles/roleManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('camera')\r\nexport class camera extends Component {\r\n\r\n    private _winSize = view.getVisibleSize();\r\n    private _originPos:Vec3 = new Vec3(0,0,1000);\r\n    start() {\r\n        this._init();\r\n        this._addListener();\r\n    }\r\n\r\n    private _init() {\r\n        console.log(\"camera pos: \"+this.node.getPosition());\r\n    }\r\n\r\n    private _addListener() {\r\n        clientEvent.on(Constant.EVENT_TYPE.MoveCamera, this._evtMoveCamera, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.InitCameraPos, this._evtInitCameraPos, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.StopCamera, this._evtStopCamera, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.MoveCamera, this._evtMoveCamera, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.InitCameraPos, this._evtInitCameraPos, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.StopCamera, this._evtStopCamera, this);\r\n    }\r\n\r\n    private _evtInitCameraPos(rolePos:Vec3){\r\n        let pos = v3(rolePos.x-400,this._originPos.y,this._originPos.z);\r\n        this.node.setPosition(pos);\r\n    }\r\n\r\n    /**\r\n     * 摄像机跟着角色移动\r\n     * @param params \r\n     */\r\n    private _evtMoveCamera(params: any[]) {\r\n        let rolePos = params[0];\r\n        let offset: number = params[1];\r\n        let pos = this.node.getPosition();\r\n        // if (rolePos.x - pos.x > this._winSize.width / 2) {\r\n            // console.log(rolePos.x - pos.x);\r\n        //     this._startMove(offset);\r\n        // }\r\n        // else \r\n        // if (rolePos.x > this._winSize.width / 2 && rolePos.x - pos.x < 400) {\r\n        //     this._startMove(offset);\r\n        // }\r\n        // else if (rolePos.x <= this._winSize.width / 2 && pos.x > 0) {\r\n        //     this._startMove(offset);\r\n        // }\r\n        let gap = this._winSize.width/2;\r\n        if(pos.x>=0 && rolePos.x>=400){\r\n            pos.x = rolePos.x-gap+280;\r\n            if(pos.x>= Constant.CurMapWidth-this._winSize.width){\r\n                pos.x = Constant.CurMapWidth - this._winSize.width;\r\n            }\r\n            this.node.setPosition(pos);\r\n        }\r\n        else{\r\n            this.node.setPosition(v3(0,pos.y,pos.z));\r\n        }\r\n    }\r\n\r\n    private _startMove(offset: number) {\r\n        let pos = this.node.getPosition();\r\n        pos.x += offset;\r\n        if(pos.x>= Constant.CurMapWidth-this._winSize.width){\r\n            pos.x = Constant.CurMapWidth - this._winSize.width;\r\n        }\r\n        this.node.setPosition(pos);\r\n        clientEvent.dispatchEvent(Constant.EVENT_TYPE.MoveJoystick, offset);\r\n    }\r\n    private _evtStopCamera() {\r\n\r\n    }\r\n}\r\n\r\n"]}