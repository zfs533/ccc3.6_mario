{"version":3,"sources":["file:///E:/CocosCreator/mario/ccc3.6_mario/client/assets/script/framework/storageManager.ts"],"names":["_decorator","sys","log","util","ccclass","property","StorageManager","_path","_keyConfig","_markSave","_saveTimer","jsonData","instance","_instance","start","_getConfigPath","content","isNative","localStorage","getItem","length","startsWith","substring","decrypt","JSON","parse","excepaiton","setInterval","scheduleSave","setConfigDataWithoutSave","key","value","account","userId","console","error","setConfigData","getConfigData","setGlobalData","save","getGlobalData","setUserId","getUserId","markModified","str","stringify","zipStr","encrypt","ls","setItem","valueObj","platform","path","OS","WINDOWS","LINUX"],"mappings":"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","sourcesContent":["import { _decorator, sys, log } from \"cc\";\r\nimport { util } from \"./util\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"StorageManager\")\r\nexport class StorageManager {\r\n    private static _instance: StorageManager;\r\n\r\n    public static get instance() {\r\n        if (this._instance) {\r\n            return this._instance;\r\n        }\r\n\r\n        this._instance = new StorageManager();\r\n        this._instance.start();\r\n        return this._instance;\r\n    }\r\n\r\n    private _path: any = null;\r\n    private _keyConfig: string = 'archero';//游戏英文名称\r\n    private _markSave: boolean = false;\r\n    private _saveTimer: number = -1;\r\n\r\n    public jsonData: { [key: string]: any } = {};\r\n\r\n    start() {\r\n        this.jsonData = {\r\n            \"userId\": \"\",\r\n        };\r\n\r\n        this._path = this._getConfigPath();\r\n\r\n        var content;\r\n        if (sys.isNative) {\r\n            // var valueObject = jsb.fileUtils.getValueMapFromFile(this._path);\r\n            // content = valueObject[this._keyConfig];\r\n        } else {\r\n            content = sys.localStorage.getItem(this._keyConfig);\r\n        }\r\n\r\n\r\n\r\n        if (content && content.length) {\r\n            if (content.startsWith('@')) {\r\n                content = content.substring(1);\r\n                content = util.decrypt(content);\r\n            }\r\n\r\n            try {\r\n                //初始化操作\r\n                var jsonData = JSON.parse(content);\r\n                this.jsonData = jsonData;\r\n            } catch (excepaiton) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        //每隔5秒保存一次数据，主要是为了保存最新在线时间，方便离线奖励时间判定\r\n        this._saveTimer = setInterval(() => {\r\n            this.scheduleSave();\r\n        }, 5000);\r\n    }\r\n\r\n    /**\r\n     * 存储配置文件，不保存到本地\r\n     * @param {string}key  关键字\r\n     * @param {any}value  存储值\r\n     */\r\n    setConfigDataWithoutSave(key: string, value: any) {\r\n        let account: string = this.jsonData.userId;\r\n        if (this.jsonData[account]) {\r\n            this.jsonData[account][key] = value;\r\n        } else {\r\n            console.error(\"no account can not save\");\r\n        }\r\n    }\r\n\r\n    /**\r\n       * 存储配置文件，保存到本地\r\n       * @param {string}key  关键字\r\n       * @param {any}value  存储值\r\n       */\r\n    setConfigData(key: string, value: any) {\r\n        this.setConfigDataWithoutSave(key, value);\r\n        this._markSave = true; //标记为需要存储，避免一直在写入，而是每隔一段时间进行写入\r\n    }\r\n\r\n    /**\r\n     * 根据关键字获取数值\r\n     * @param {string} key 关键字\r\n     * @returns \r\n     */\r\n    getConfigData(key: string) {\r\n        let account: string = this.jsonData.userId;\r\n        if (this.jsonData[account]) {\r\n            var value = this.jsonData[account][key];\r\n            return value ? value : \"\";\r\n        } else {\r\n            log(\"no account can not load\");\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置全局数据\r\n     * @param {string} key 关键字\r\n     * @param {any}value  存储值\r\n     * @returns \r\n     */\r\n    public setGlobalData(key: string, value: any) {\r\n        this.jsonData[key] = value;\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * 获取全局数据\r\n     * @param {string} key 关键字\r\n     * @returns \r\n     */\r\n    public getGlobalData(key: string) {\r\n        return this.jsonData[key];\r\n    }\r\n\r\n    /**\r\n     * 设置用户唯一标示符\r\n     * @param {string} userId 用户唯一标示符\r\n     * @param {any}value  存储值\r\n     * @returns \r\n     */\r\n    public setUserId(userId: string) {\r\n        this.jsonData.userId = userId;\r\n        if (!this.jsonData[userId]) {\r\n            this.jsonData[userId] = {};\r\n        }\r\n\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * 获取用户唯一标示符\r\n     * @returns {string}\r\n     */\r\n    public getUserId() {\r\n        return this.jsonData.userId;\r\n    }\r\n\r\n    /**\r\n     * 定时存储\r\n     * @returns \r\n     */\r\n    public scheduleSave() {\r\n        if (!this._markSave) {\r\n            return;\r\n        }\r\n\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * 标记为已修改\r\n     */\r\n    public markModified() {\r\n        this._markSave = true;\r\n    }\r\n\r\n    /**\r\n     * 保存配置文件\r\n     * @returns \r\n     */\r\n    public save() {\r\n        // 写入文件\r\n        var str = JSON.stringify(this.jsonData);\r\n\r\n        // // 加密代码\r\n        // if (cc.game.config[\"encript\"]) {\r\n        //     str = new Xxtea(\"upgradeHeroAbility\").xxteaEncrypt(str);\r\n        // }\r\n\r\n        let zipStr = '@' + util.encrypt(str);\r\n        // let zipStr = str;\r\n\r\n        this._markSave = false;\r\n\r\n        if (!sys.isNative) {\r\n            var ls = sys.localStorage;\r\n            ls.setItem(this._keyConfig, zipStr);\r\n            return;\r\n        }\r\n\r\n        var valueObj: any = {};\r\n        valueObj[this._keyConfig] = zipStr;\r\n        // jsb.fileUtils.writeToFile(valueObj, this._path);\r\n        // jsb.fileUtils.writeToFile(valueObj);\r\n    }\r\n\r\n    /**\r\n     * 获取配置文件路径\r\n     * @returns 获取配置文件路径\r\n     */\r\n    private _getConfigPath() {\r\n\r\n        let platform: any = sys.platform;\r\n\r\n        let path: string = \"\";\r\n\r\n        if (platform === sys.OS.WINDOWS) {\r\n            path = \"src/conf\";\r\n        } else if (platform === sys.OS.LINUX) {\r\n            path = \"./conf\";\r\n        } else {\r\n            if (sys.isNative) {\r\n                // path = jsb.fileUtils.getWritablePath();\r\n                // path = path + \"conf\";\r\n            } else {\r\n                path = \"src/conf\";\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n}\r\n"]}