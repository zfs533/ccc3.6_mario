{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/pieces/coin.ts"],"names":["_decorator","AudioManager","clientEvent","Constant","getBrickIndex","baseCollider","ccclass","property","coin","index","_isDistoried","_lastColliderName","_tempIdx","onEnable","_init","_addListener","on","EVENT_TYPE","CoinRemove","_evtCoinRemove","onDestroy","off","console","log","isImideltly","instance","playSound","scheduleOnce","node","destroy","onBeginContact","selfCollider","otherCollider","contact","name1","name","name2","includes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;sBAGjBQ,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb;AAAA;AAAA,wCACuC;AAAA;AAAA;AAAA,eAC5BC,KAD4B,GACZ,CADY;AAAA,eAE3BC,YAF2B,GAEJ,KAFI;AAAA,eAG3BC,iBAH2B,GAGA,EAHA;AAAA,eA8C1BC,QA9C0B,GA8CR,CAAC,GA9CO;AAAA;;AAInCC,QAAAA,QAAQ,GAAG;AACP,eAAKC,KAAL;;AACA,eAAKC,YAAL;AACH;;AAEOA,QAAAA,YAAY,GAAG;AACnB;AAAA;AAAA,0CAAYC,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBC,UAApB,GAAiC,KAAKT,KAArD,EAA4D,KAAKU,cAAjE,EAAiF,IAAjF;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR;AAAA;AAAA,0CAAYC,GAAZ,CAAgB;AAAA;AAAA,oCAASJ,UAAT,CAAoBC,UAApB,GAAiC,KAAKT,KAAtD,EAA6D,KAAKU,cAAlE,EAAkF,IAAlF;AACH;;AACOL,QAAAA,KAAK,GAAG;AACZ,eAAKL,KAAL,GAAa;AAAA;AAAA,+CAAb;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACH;;AAEOU,QAAAA,cAAc,CAACK,WAAoB,GAAG,KAAxB,EAA+B;AACjDF,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAsB,KAAKb,YAA3B,GAA0C,WAA1C,GAAsD,KAAKD,KAAvE;AACA,cAAG,KAAKC,YAAR,EAAsB;AACtB,eAAKA,YAAL,GAAoB,IAApB;AACA;AAAA;AAAA,4CAAae,QAAb,CAAsBC,SAAtB,CAAgC,UAAhC,EAA2C,KAA3C;AACA,eAAKC,YAAL,CAAkB,MAAI;AAClB,gBAAIH,WAAJ,EAAiB;AACb,mBAAKI,IAAL,CAAUC,OAAV,GADa,CAEb;AACH,aAHD,MAIK;AACD,mBAAKF,YAAL,CAAkB,MAAM;AACpB,qBAAKC,IAAL,CAAUC,OAAV,GADoB,CAEpB;AACH,eAHD,EAGG,GAHH;AAIH;AACJ,WAXD,EAWE,SAXF;AAYH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AAEYC,QAAAA,cAAc,CAACC,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAyF;AAC1G;AACA,cAAIC,KAAK,GAAGH,YAAY,CAACH,IAAb,CAAkBO,IAA9B;AACA,cAAIC,KAAK,GAAGJ,aAAa,CAACJ,IAAd,CAAmBO,IAA/B;AACA,cAAGC,KAAK,IAAI,KAAKzB,iBAAjB,EAAmC;AACnC,eAAKA,iBAAL,GAAyByB,KAAzB;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAoB,KAAKd,KAArC;;AACA,cAAG2B,KAAK,CAACC,QAAN,CAAe,OAAf,CAAH,EAA2B;AACxB,iBAAKlB,cAAL,CAAoB,IAApB,EADwB,CAExB;AACA;AACA;AACA;AACA;AACA;;AACE;AACJ;;AA/D6B,O","sourcesContent":["import { _decorator, Component, Node, BoxCollider2D, RigidBody2D, Collider2D, IPhysics2DContact } from 'cc';\r\nimport { AudioManager } from '../../framework/audioManager';\r\nimport { clientEvent } from '../../framework/clientEvent';\r\nimport { Constant } from '../../framework/constant';\r\nimport { PoolManager } from '../../framework/poolManager';\r\nimport { getBrickIndex } from '../../net/util';\r\nimport { baseCollider } from '../collider/baseCollider';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('coin')\r\nexport class coin extends baseCollider {\r\n    public index: number = 0;\r\n    private _isDistoried:boolean = false;\r\n    private _lastColliderName:string = \"\";\r\n    onEnable() {\r\n        this._init();\r\n        this._addListener();\r\n    }\r\n\r\n    private _addListener() {\r\n        clientEvent.on(Constant.EVENT_TYPE.CoinRemove + this.index, this._evtCoinRemove, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.CoinRemove + this.index, this._evtCoinRemove, this);\r\n    }\r\n    private _init() {\r\n        this.index = getBrickIndex();\r\n        console.log(this.index);\r\n    }\r\n\r\n    private _evtCoinRemove(isImideltly: boolean = false) {\r\n        console.log(\"this._isDistoried: \"+this._isDistoried+  \"  index: \"+this.index);\r\n        if(this._isDistoried) return;\r\n        this._isDistoried = true;\r\n        AudioManager.instance.playSound(\"smb_coin\",false);\r\n        this.scheduleOnce(()=>{\r\n            if (isImideltly) {\r\n                this.node.destroy();\r\n                // PoolManager.Inst.setNode(this.node);\r\n            }\r\n            else {\r\n                this.scheduleOnce(() => {\r\n                    this.node.destroy();\r\n                    // PoolManager.Inst.setNode(this.node);\r\n                }, 0.5);\r\n            }\r\n        },0.0000001);\r\n    }\r\n\r\n    /**\r\n     * 碰撞检测\r\n     * @param selfCollider  \r\n     * @param otherCollider \r\n     * @param contact \r\n     */\r\n     private _tempIdx:number = -100;\r\n     public onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n         // 只在两个碰撞体开始接触时被调用一次\r\n         let name1 = selfCollider.node.name;\r\n         let name2 = otherCollider.node.name;\r\n         if(name2 == this._lastColliderName)return;\r\n         this._lastColliderName = name2;\r\n         console.log('start_collider : '+this.index);\r\n         if(name2.includes(\"mario\")){\r\n            this._evtCoinRemove(true);\r\n            //  let idx = otherCollider.node.parent.getComponent(coin).index;\r\n            //  console.log(\"this._tempIdx-------- all : \"+this._tempIdx);\r\n            //  if(this._tempIdx != idx){\r\n            //      this._tempIdx = idx;\r\n            //      console.log(\"this._tempIdx: \"+this._tempIdx);\r\n            //      clientEvent.dispatchEvent(Constant.EVENT_TYPE.CoinRemove + idx,true);\r\n             }\r\n         }\r\n}\r\n\r\n"]}