{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/framework/lodash.ts"],"names":["_decorator","ccclass","lodash","find","collection","predicate","result","Array","isArray","_toArray","filter","length","undefined","forEach","iteratee","array","_toArrayKey","value","index","arr","key1","value1","cloneDeep","sObj","s","constructor","i","hasOwnProperty","map","push","srcObj","resultArr","key","iteratees","isEqual","x","y","in1","Object","in2","keys","p","a","b","pullAllWith","comparator","item","res","n","indexOf","splice","now","Date","pullAll","forEachRight","ret","startsWith","str","target","position","substr","endsWith","remove","indexes","_basePullAt","lastIndex","previous","prototype","call","findIndex","fromIndex","slice","vaule","concat","arguments","isNumber","join","separator","split","limit","max","drop","flattenDeep","reduce","prev","cur","uniq","isNaN","chunk","size","toFinite","INFINITY","MAX_INTEGER","Number","sign","isObject","type","isLength","MAX_SAFE_INTEGER","_isArrayLike","maxBy","objResult","minBy","sumBy","sum","countBy","objRet"],"mappings":"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","sourcesContent":["import { _decorator } from \"cc\";\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass(\"lodash\")\r\nexport class lodash {\r\n    /* class member could be defined like this */\r\n    // dummy = '';\r\n    /**\r\n     * 遍历 collection（集合）元素，返回 predicate（断言函数）第一个返回真值的第一个元素\r\n     * @param  {any} collection 一个用来迭代的集合\r\n     * @param {Function} predicate 每次迭代调用的函数。\r\n     * @returns 返回匹配元素，否则返回 undefined。\r\n     */\r\n    public static find (collection: any, predicate: Function) {\r\n        var result;\r\n        if (!Array.isArray(collection)) {\r\n            collection = lodash._toArray(collection);\r\n        }\r\n\r\n        result = collection.filter(predicate);\r\n        if (result.length) {\r\n            return result[0];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 调用 iteratee 遍历 collection(集合) 中的每个元素\r\n     * @param  {any} collection 一个用来迭代的集合\r\n     * @param {Function} iteratee 每次迭代调用的函数。\r\n     */\r\n    public static forEach(collection: any, iteratee: any) {\r\n        if (!Array.isArray(collection)) {\r\n            var array = lodash._toArrayKey(collection);\r\n            array.forEach(function (value: any, index: number, arr: any[]) {\r\n                var key1 = value['key'];\r\n                var value1 = value['value'];\r\n                iteratee(value1, key1, collection);\r\n            });\r\n        } else {\r\n            collection.forEach(iteratee);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 深度拷贝\r\n     * @param {any} sObj 拷贝的对象\r\n     * @returns \r\n     */\r\n    public static cloneDeep(sObj: any) {\r\n        if (sObj === null || typeof sObj !== \"object\") {\r\n            return sObj;\r\n        }\r\n\r\n        let s: any = {};\r\n        if (sObj.constructor === Array) {\r\n            s = [];\r\n        }\r\n\r\n        for (let i in sObj) {\r\n            if (sObj.hasOwnProperty(i)) {\r\n                s[i] = lodash.cloneDeep(sObj[i]);\r\n            }\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * 创建一个数组， value（值） 是 iteratee（迭代函数）遍历 collection（集合）中的每个元素后返回的结果。\r\n     * @param {Array|Object} collection  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数，用来转换key（键\r\n     * @returns {Array} 返回一个组成集合数组\r\n     */\r\n    public static map(collection: any, iteratee: any) {\r\n        if (!Array.isArray(collection)) {\r\n            collection = lodash._toArray(collection);\r\n        }\r\n\r\n        let arr: any[] = [];\r\n        collection.forEach(function (value: any, index: number, array: []) {\r\n            arr.push(iteratee(value, index, array));\r\n        });\r\n\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param srcObj \r\n     * @returns \r\n     */\r\n    private static _toArrayKey(srcObj: { [x: string]: any; hasOwnProperty: (arg0: string) => any; }) {\r\n        var resultArr = [];\r\n\r\n        // to array\r\n        for (var key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            resultArr.push({ key: key, value: srcObj[key] });\r\n        }\r\n\r\n        return resultArr;\r\n    }\r\n\r\n    private static _toArray(srcObj: any) {\r\n        let resultArr: any[] = [];\r\n\r\n        // to array\r\n        for (var key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            resultArr.push(srcObj[key]);\r\n        }\r\n\r\n        return resultArr;\r\n    }\r\n\r\n    /**\r\n     * 遍历 collection（集合）元素，返回 predicate（断言函数）返回真值 的所有元素的数组。\r\n     * @param {Array|Object} collection  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数，用来转换key（键\r\n     * @returns 返回一个新的过滤后的数组。\r\n     */\r\n    public static filter(collection: any, iteratees: Function) {\r\n        if (!Array.isArray(collection)) {\r\n            collection = lodash._toArray(collection);\r\n        }\r\n\r\n        return collection.filter(iteratees);\r\n    }\r\n\r\n    /**\r\n     * 执行深比较来确定两者的值是否相等。\r\n     * @param {any}x \r\n     * @param {any}y \r\n     * @returns {boolean} 如果 两个值完全相同，那么返回 true，否则返回 false。\r\n     */\r\n    public static isEqual(x: any, y: any): boolean {\r\n        var in1 = x instanceof Object;\r\n        var in2 = y instanceof Object;\r\n        if (!in1 || !in2) {\r\n            return x === y;\r\n        }\r\n\r\n        if (Object.keys(x).length !== Object.keys(y).length) {\r\n            return false;\r\n        }\r\n\r\n        for (var p in x) {\r\n            var a = x[p] instanceof Object;\r\n            var b = y[p] instanceof Object;\r\n            if (a && b) {\r\n                return lodash.isEqual(x[p], y[p]);\r\n            } else if (x[p] !== y[p]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 接收一个要移除值的数组。\r\n     * @param {Array} array 修改的数组\r\n     * @param {Array} value 移除值的数组\r\n     * @param  {Function} comparator comparator（比较器）调用每个元素。\r\n     * @returns \r\n     */\r\n    public static pullAllWith(array: any[], value: any[], comparator: Function) {\r\n        value.forEach(function (item) {\r\n            var res = array.filter(function (n) {\r\n                return comparator(n, item);\r\n            });\r\n\r\n            res.forEach(function (item) {\r\n                var index = array.indexOf(item);\r\n                if (array.indexOf(item) !== -1) {\r\n                    array.splice(index, 1);\r\n                }\r\n            });\r\n        });\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 返回当前时间戳\r\n     * @returns \r\n     */\r\n    public static now() {\r\n        return Date.now();\r\n    }\r\n\r\n    /**\r\n     * 接收一个要移除值的数组。\r\n     * @param {Array} array 修改的数组\r\n     * @param {Array} value 移除值的数组\r\n     * @returns \r\n     */\r\n    public static pullAll(array: any[], value: any) {\r\n        value.forEach(function (item: any) {\r\n            var index = array.indexOf(item);\r\n            if (array.indexOf(item) !== -1) {\r\n                array.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 从右到左遍历集合中每一个元素的。\r\n     * @param {Array|Object} collection  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数\r\n     */\r\n    public static forEachRight(collection: [] | {}, iteratee: Function) {\r\n        if (!Array.isArray(collection)) {\r\n            collection = lodash._toArray(collection);\r\n        }\r\n\r\n        //@ts-ignore\r\n        for (var i = collection.length - 1; i >= 0; i--) {\r\n            //@ts-ignore\r\n            var ret = iteratee(collection[i]);\r\n            if (!ret) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查字符串string是否以 target 开头。\r\n     * @param {string} str 要检索的字符串。\r\n     * @param {string}target  要检查的字符串。\r\n     * @param {number}position 检索的位置。\r\n     * @returns \r\n     */\r\n    public static startsWith(str: string, target: string, position: number) {\r\n        str = str.substr(position);\r\n        return str.startsWith(target);\r\n    }\r\n\r\n    /**\r\n     * 检查字符串string是否以 target 结束。\r\n     * @param {string} str 要检索的字符串。\r\n     * @param {string}target  要检查的字符串。\r\n     * @param {number}position 检索的位置。\r\n     * @returns \r\n     */\r\n    public static endsWith(str: string, target: string, position: number) {\r\n        str = str.substr(position);\r\n        return str.endsWith(target);\r\n    }\r\n\r\n    /**\r\n     * 移除数组中predicate（断言）返回为真值的所有元素\r\n     * @param {Array} array  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数\r\n     * @returns \r\n     */\r\n    public static remove(array: any[], predicate: Function) {\r\n        var result: any[] = [];\r\n        var indexes: any[] = [];\r\n        array.forEach(function (item, index) {\r\n            if (predicate(item)) {\r\n                result.push(item);\r\n                indexes.push(index);\r\n            }\r\n        });\r\n\r\n        lodash._basePullAt(array, indexes);\r\n        return result;\r\n    }\r\n\r\n    private static _basePullAt(array: any[], indexes: any[]) {\r\n        var length = array ? indexes.length : 0;\r\n        var lastIndex = length - 1;\r\n        var previous;\r\n\r\n        while (length--) {\r\n            var index = indexes[length];\r\n            if (length === lastIndex || index !== previous) {\r\n                previous = index;\r\n                Array.prototype.splice.call(array, index, 1);\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 返回第一个通过 predicate 判断为真值的元素的索引值\r\n     * @param {Array} array  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数\r\n     * @param {number} fromIndex 开始查找索引值\r\n     * @returns \r\n     */\r\n    public static findIndex(array: any[], predicate: Function, fromIndex: number) {\r\n        array =  array.slice(fromIndex);\r\n        var i;\r\n        if (typeof predicate === \"function\") {\r\n            for (i = 0; i < array.length; i++) {\r\n                if (predicate(array[i])) {\r\n                    return i;\r\n                }\r\n            }\r\n        } else if (Array.isArray(predicate)) {\r\n            for (i = 0; i < array.length; i++) {\r\n                var key = predicate[0];\r\n                var vaule = true;\r\n                //@ts-ignore\r\n                if (predicate.length > 1) {\r\n                    vaule = predicate[1];\r\n                }\r\n\r\n                if (array[i][key] === vaule) {\r\n                    return i;\r\n                }\r\n            }\r\n        } else {\r\n            for (i = 0; i < array.length; i++) {\r\n                if (array[i] === predicate) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * 创建一个新数组，将array与任何数组 或 值连接在一起。\r\n     * @returns \r\n     */\r\n    public static concat() {\r\n        var length = arguments.length;\r\n        if (!length) {\r\n            return [];\r\n        }\r\n\r\n        var array = arguments[0];\r\n        var index = 1;\r\n        while (index < length) {\r\n            array = array.concat(arguments[index]);\r\n            index++;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 检查 value 是否是原始Number数值型 或者 对象。\r\n     * @param {any }value \r\n     * @returns \r\n     */\r\n    public static isNumber(value: any) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    /**\r\n     * 返回首次 value 在数组array中被找到的 索引值\r\n     * @param {Array}array \r\n     * @param {any}value \r\n     * @param {number} fromIndex \r\n     * @returns \r\n     */\r\n    public static indexOf(array: any[], value: any, fromIndex: number) {\r\n        array =  array.slice(fromIndex);\r\n        return array.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * 将 array 中的所有元素转换为由 separator 分隔的字符串。\r\n     * @param {any} array 要转换的数组\r\n     * @param {string} separator 分隔元素。\r\n     * @returns \r\n     */\r\n    public static join(array: any[], separator: string) {\r\n        if (array === null) return '';\r\n\r\n        var result = '';\r\n        array.forEach(function (item) {\r\n            result += item + separator;\r\n        });\r\n\r\n        return result.substr(0, result.length - 1);\r\n    }\r\n\r\n    /**\r\n     * 根据separator 拆分字符串string。\r\n     * @param {string} str 要转换的数组\r\n     * @param {RegExp|string} separator 分隔元素。\r\n     * @param {number} limit 限制结果的数量。\r\n     * @returns \r\n     */\r\n    public static split(str: string, separator: RegExp|string, limit: number) {\r\n        return str.split(separator, limit);\r\n    }\r\n\r\n    /**\r\n     * 计算 array 中的最大值。 如果 array 是 空的或者假值将会返回 undefined。\r\n     * @param {Array}array \r\n     * @returns \r\n     */\r\n    public static max(array: any[]) {\r\n        if (array && array.length) {\r\n            var result;\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (i === 0) {\r\n                    result = array[0];\r\n                } else if (result < array[i]) {\r\n                    result = array[i];\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return undefined;\r\n\r\n    }\r\n\r\n    /**\r\n     * 创建一个切片数组，去除array前面的n个元素。（n默认值为1。）\r\n     * @param {Array}array : 要查询的数组。\r\n     * @param {number}n 要去除的元素个数。\r\n     * @returns \r\n     */\r\n    public static drop(array: any[], n: number) {\r\n        var length = array === null ? 0 : array.length;\r\n        if (!length) {\r\n            return [];\r\n        }\r\n\r\n        return array.slice(n);\r\n    }\r\n\r\n    /**\r\n     * 将array递归为一维数组。\r\n     * @param {Array} arr \r\n     * @returns \r\n     */\r\n    public static flattenDeep(arr: any[]): any {\r\n        return arr.reduce(function (prev: any[], cur: any[]) {\r\n            return prev.concat(Array.isArray(cur) ? lodash.flattenDeep(cur) : cur);\r\n        }, [ ]);\r\n    }\r\n\r\n    /**\r\n     * 创建一个去重后的array数组副本。使用了SameValueZero 做等值比较。只有第一次出现的元素才会被保留。\r\n     * @param {Array} array \r\n     * @returns \r\n     */\r\n    public static uniq(array: any[]) {\r\n        let result: any[] = [];\r\n        array.forEach(function (item) {\r\n            if (result.indexOf(item) === -1) {\r\n                result.push(item);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 检查 value 是否是 NaN。\r\n     * @param {any}value \r\n     * @returns \r\n     */\r\n    public static isNaN(value: any) {\r\n        // An `NaN` primitive is the only value that is not equal to itself.\r\n        // Perform the `toStringTag` check first to avoid errors with some\r\n        // ActiveX objects in IE.\r\n        return lodash.isNumber(value) && value !== +value;\r\n    }\r\n\r\n    /**\r\n     * 将数组（array）拆分成多个 size 长度的区块，并将这些区块组成一个新数组\r\n     * @param {Array}array \r\n     * @param {number}size \r\n     * @returns \r\n     */\r\n    public static chunk(array: any[], size: number) {\r\n        var length = array === null ? 0 : array.length;\r\n        if (!length || size < 1) {\r\n            return [];\r\n        }\r\n\r\n        var result = [];\r\n        while (array.length > size) {\r\n            result.push(array.slice(0, size));\r\n            array = array.slice(size);\r\n        }\r\n\r\n        result.push(array);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 转换 value 为一个有限数字\r\n     * @param {any} value \r\n     * @returns \r\n     */\r\n    public static toFinite(value: any) {\r\n        var INFINITY = 1 / 0;\r\n        var MAX_INTEGER = 1.7976931348623157e+308;\r\n        if (!value) {\r\n            return value === 0 ? value : 0;\r\n        }\r\n        value = Number(value);\r\n        if (value === INFINITY || value === -INFINITY) {\r\n            var sign = (value < 0 ? -1 : 1);\r\n            return sign * MAX_INTEGER;\r\n        }\r\n        return value === value ? value : 0;\r\n    }\r\n\r\n    /**\r\n     * 判断是否为对象\r\n     * @param {any}value  \r\n     * @returns {boolean}\r\n     */\r\n    public static isObject(value: any) {\r\n        var type = typeof value;\r\n        return value !== null && (type === 'object' || type === 'function');\r\n    }\r\n\r\n    public static MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n    /**\r\n     * \r\n     * @param value \r\n     * @returns \r\n     */\r\n    public static isLength(value: any) {\r\n        return typeof value === 'number' &&\r\n            value > -1 && value % 1 === 0 && value <= lodash.MAX_SAFE_INTEGER;\r\n    }\r\n\r\n    public static _isArrayLike(value: []) {\r\n        return value !== null && lodash.isLength(value.length) /*&& !isFunction(value)*/;\r\n    }\r\n\r\n    /**\r\n     * 返回数组总符合条件的最大值\r\n     * @param {Array} array  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数\r\n     * @returns {Object} 返回最大值\r\n     */\r\n    public static maxBy(array: any[], predicate: Function) {\r\n        if (array && array.length) {\r\n            var result;\r\n            var objResult;\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (i === 0) {\r\n                    result = predicate(array[0]);\r\n                    objResult = array[0];\r\n                } else if (result < array[i]) {\r\n                    result = (array[i]);\r\n                    objResult = array[i];\r\n                }\r\n            }\r\n\r\n            return objResult;\r\n        }\r\n\r\n        return undefined;\r\n\r\n    }\r\n\r\n    /**\r\n     * 返回数组总符合条件的最小值\r\n     * @param {Array} array  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数\r\n     * @returns {Object} 返回最小值\r\n     */\r\n    public static minBy(array: any[], predicate: Function) {\r\n        if (array && array.length) {\r\n            let result;\r\n            let objResult;\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (i === 0) {\r\n                    result = predicate(array[0]);\r\n                    objResult = array[0];\r\n                } else if (result > array[i]) {\r\n                    result = predicate(array[i]);\r\n                    objResult = array[i];\r\n                }\r\n            }\r\n\r\n            return objResult;\r\n        }\r\n\r\n        return undefined;\r\n\r\n    }\r\n    /**\r\n     * 返回复合迭代函数的总和\r\n     * @param {Array|Object} collection  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数\r\n     * @returns {Object} 返回总和\r\n     */\r\n    public static sumBy(collection: [] | {}, predicate: Function) {\r\n        let sum: number = 0;\r\n        for (let key in collection) {\r\n            //@ts-ignore\r\n            sum += predicate(collection[key]);\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    /**\r\n     * 返回复合迭代函数的次数\r\n     * @param {Array|Object} collection  一个用来迭代的集合.\r\n     * @param {Function} predicate  一个迭代函数，用来转换key（键\r\n     * @returns {Object} 返回一个组成集合对象\r\n     */\r\n    public static countBy(collection: [] | {}, predicate: Function) {\r\n        let objRet: {[key: string]: number} = {};\r\n        for (let key in collection) {\r\n            let value: any = predicate(key);\r\n            if (objRet.hasOwnProperty(value)) {\r\n                objRet[value] += 1;\r\n            } else {\r\n                objRet[value] = 1;\r\n            }\r\n        }\r\n\r\n        return objRet;\r\n    }\r\n    \r\n}\r\n"]}