{"version":3,"sources":["file:///D:/CocosDashboard/resources/.editors/Creator/3.6.0/resources/app.asar.unpacked/modules/editor-extensions/extensions/localization-editor/node_modules/@formatjs/intl-relativetimeformat/node_modules/@formatjs/ecma402-abstract/NumberFormat/PartitionNumberPattern.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","PartitionNumberPattern","tslib_1","FormatNumericToString_1","_262_1","ComputeExponent_1","format_to_parts_1","__importDefault","numberFormat","x","_a","_b","getInternalSlots","internalSlots","pl","dataLocaleData","numberingSystem","symbols","numbers","nu","magnitude","exponent","n","isNaN","nan","isFinite","infinity","style","ComputeExponent","Math","pow","formatNumberResult","FormatNumericToString","formattedString","roundedNumber","sign","signDisplay","SameValue","default","_cjsExports","___esModule","__esModule","_PartitionNumberPattern"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'tslib';\nimport { __cjsMetaURL as _req0} from './FormatNumericToString';\nimport { __cjsMetaURL as _req1} from '../262';\nimport { __cjsMetaURL as _req2} from './ComputeExponent';\nimport { __cjsMetaURL as _req3} from './format_to_parts';\nlet _cjsExports;\nlet ___esModule;\nlet _PartitionNumberPattern;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.PartitionNumberPattern = void 0;\n var tslib_1 = require(\"tslib\");\n var FormatNumericToString_1 = require(\"./FormatNumericToString\");\n var _262_1 = require(\"../262\");\n var ComputeExponent_1 = require(\"./ComputeExponent\");\n var format_to_parts_1 = (0, tslib_1.__importDefault)(require(\"./format_to_parts\"));\n /**\n  * https://tc39.es/ecma402/#sec-formatnumberstring\n  */\n function PartitionNumberPattern(numberFormat, x, _a) {\n     var _b;\n     var getInternalSlots = _a.getInternalSlots;\n     var internalSlots = getInternalSlots(numberFormat);\n     var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n     var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n         dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n     var magnitude = 0;\n     var exponent = 0;\n     var n;\n     if (isNaN(x)) {\n         n = symbols.nan;\n     }\n     else if (!isFinite(x)) {\n         n = symbols.infinity;\n     }\n     else {\n         if (internalSlots.style === 'percent') {\n             x *= 100;\n         }\n         ;\n         _b = (0, ComputeExponent_1.ComputeExponent)(numberFormat, x, {\n             getInternalSlots: getInternalSlots,\n         }), exponent = _b[0], magnitude = _b[1];\n         // Preserve more precision by doing multiplication when exponent is negative.\n         x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n         var formatNumberResult = (0, FormatNumericToString_1.FormatNumericToString)(internalSlots, x);\n         n = formatNumberResult.formattedString;\n         x = formatNumberResult.roundedNumber;\n     }\n     // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n     // We need to do this before `x` is rounded.\n     var sign;\n     var signDisplay = internalSlots.signDisplay;\n     switch (signDisplay) {\n         case 'never':\n             sign = 0;\n             break;\n         case 'auto':\n             if ((0, _262_1.SameValue)(x, 0) || x > 0 || isNaN(x)) {\n                 sign = 0;\n             }\n             else {\n                 sign = -1;\n             }\n             break;\n         case 'always':\n             if ((0, _262_1.SameValue)(x, 0) || x > 0 || isNaN(x)) {\n                 sign = 1;\n             }\n             else {\n                 sign = -1;\n             }\n             break;\n         default:\n             // x === 0 -> x is 0 or x is -0\n             if (x === 0 || isNaN(x)) {\n                 sign = 0;\n             }\n             else if (x > 0) {\n                 sign = 1;\n             }\n             else {\n                 sign = -1;\n             }\n     }\n     return (0, format_to_parts_1.default)({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n }\n exports.PartitionNumberPattern = PartitionNumberPattern;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_PartitionNumberPattern = module.exports.PartitionNumberPattern;\n\n}, () => ({\n  'tslib': _req,\n  './FormatNumericToString': _req0,\n  '../262': _req1,\n  './ComputeExponent': _req2,\n  './format_to_parts': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}