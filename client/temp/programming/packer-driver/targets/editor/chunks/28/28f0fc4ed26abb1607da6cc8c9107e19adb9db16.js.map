{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/roles/mario/mario.ts"],"names":["Animation","PolygonCollider2D","RigidBody2D","UITransformComponent","v2","v3","Vec3","_decorator","clientEvent","Constant","AnimMario","MarioStatus","baseCollider","brick","whyBrick","roleManager","ccclass","property","mario","_anim","undefined","_rigidbody2d","_speed","_isMoving","_jumpPoint","_status","_isDeath","_lastColliderName","start","_init","_addListener","on","EVENT_TYPE","Move","_evtStartMove","Stop","_evtStop","Jump","_evtJump","MarioDeath","_evtPlayMarioDeath","onDestroy","off","MoveSpeed","_loadAnimComponent","_loadRigidBody2d","playIdle","Promise","resolve","node","getComponent","update","deltaTime","console","log","pos","getPosition","speed","x","CurMapWidth","setPosition","scale","getScale","Math","abs","setScale","dispatchEvent","MoveCamera","y","jump","playWalk","_isCandoAction","idle","play","walk","isDown","destroy","death","z","applyForce","Inst","updateAlivePoint","scheduleOnce","TranslateScenes","playSwim","swim","playJump","status","handleColliderUp","onBeginContact","selfCollider","otherCollider","contact","name1","name","name2","includes","FinishedGame","_check_gameOver","bk","points","getWorldManifold","length","cPos","bPos","getWorldPosition","BrickMove","index","mar","TopWhy","ut","height"],"mappings":"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","sourcesContent":["import { Animation, BoxCollider2D, Collider2D, Component, IPhysics2DContact, PolygonCollider2D, RigidBody2D, tween, UITransformComponent, v2, v3, Vec3, _decorator } from 'cc';\r\nimport { clientEvent } from '../../../framework/clientEvent';\r\nimport { Constant } from '../../../framework/constant';\r\nimport { AnimMario, MarioStatus } from '../../../framework/enum';\r\nimport { baseCollider } from '../../collider/baseCollider';\r\nimport { brick } from '../../pieces/brick';\r\nimport { whyBrick } from '../../pieces/whyBrick';\r\nimport { roleManager } from '../roleManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('mario')\r\nexport class mario extends baseCollider {\r\n    private _anim: Animation = undefined;\r\n    private _rigidbody2d: RigidBody2D = undefined;\r\n    private _speed: number = -1;\r\n    private _isMoving: boolean = false;\r\n    private _jumpPoint: Vec3 = new Vec3();\r\n    private _status: number = 0;\r\n    private _isDeath: boolean = false;\r\n    private _lastColliderName:string = \"\";\r\n    start() {\r\n        super.start();\r\n        this._init();\r\n        this._addListener();\r\n    }\r\n\r\n    private _addListener() {\r\n        clientEvent.on(Constant.EVENT_TYPE.Move, this._evtStartMove, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.Stop, this._evtStop, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.Jump, this._evtJump, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.MarioDeath, this._evtPlayMarioDeath, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.Move, this._evtStartMove, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.Stop, this._evtStop, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.Jump, this._evtJump, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.MarioDeath, this._evtPlayMarioDeath, this);\r\n    }\r\n\r\n    private _init() {\r\n        this._speed = Constant.MoveSpeed / 2;\r\n        this._loadAnimComponent();\r\n        this._loadRigidBody2d();\r\n        this.playIdle();\r\n    }\r\n    private _loadAnimComponent() {\r\n        return new Promise(resolve => {\r\n            this._anim = this.node.getComponent(Animation);\r\n            resolve(null);\r\n        });\r\n    }\r\n    private _loadRigidBody2d() {\r\n        return new Promise(resolve => {\r\n            this._rigidbody2d = this.node.getComponent(RigidBody2D);\r\n            resolve(null);\r\n        });\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this._isDeath) return;\r\n        if(this._isMoving){\r\n            console.log(deltaTime);\r\n            let pos = this.node.getPosition();\r\n            let speed = deltaTime*this._speed*250;\r\n            pos.x += speed;\r\n            if (pos.x <= 8) { pos.x = 8; }\r\n            if(pos.x>=Constant.CurMapWidth - 8){pos.x = Constant.CurMapWidth - 8;}\r\n            this.node.setPosition(pos);\r\n            let scale = this.node.getScale();\r\n            scale.x = this._speed*Math.abs(scale.x);\r\n            this.node.setScale(scale);\r\n            clientEvent.dispatchEvent(Constant.EVENT_TYPE.MoveCamera, [pos, speed]);\r\n        }\r\n        \r\n        let pos = this.node.getPosition();\r\n        if (pos.y < -40) {\r\n            this._evtPlayMarioDeath(true);\r\n            return;\r\n        }\r\n        switch(this._status){\r\n            case MarioStatus.jump:\r\n                if(Math.abs(pos.y - this._jumpPoint.y)<3){\r\n                    if(this._isMoving){\r\n                        this.playWalk();\r\n                    }\r\n                    else{\r\n                        this.playIdle();\r\n                    }\r\n                }\r\n                break;\r\n\r\n            default:break;\r\n        }\r\n    }\r\n    async playIdle() {\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        if(!this._isCandoAction(MarioStatus.idle))return;\r\n        this._anim.play(AnimMario.idle);\r\n    }\r\n    async playWalk() {\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        if(!this._isCandoAction(MarioStatus.walk))return;\r\n        this._anim.play(AnimMario.walk);\r\n    }\r\n    async _evtPlayMarioDeath(isDown: boolean = false) {\r\n        if (this._isDeath) return;\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        this.node.getComponent(PolygonCollider2D).destroy();\r\n        this._status = MarioStatus.death;\r\n        this._anim.play(AnimMario.death);\r\n        this._isDeath = true;\r\n        let pos = this.node.getPosition();\r\n        this.node.setPosition(v3(pos.x, pos.y + 2, pos.z));\r\n        if (isDown) {\r\n            this._rigidbody2d.applyForce(v2(0, 2800), v2(0, 0), true);\r\n        }\r\n        else {\r\n            this._rigidbody2d.applyForce(v2(0, 1300), v2(0, 0), true);\r\n        }\r\n        //刷新复活点\r\n        roleManager.Inst.updateAlivePoint(pos)\r\n        //先让他复活\r\n        this.scheduleOnce(() => {\r\n            this.node.destroy();\r\n            // roleManager.Inst.addMarioToMap();\r\n            clientEvent.dispatchEvent(Constant.EVENT_TYPE.TranslateScenes);\r\n        }, 2);\r\n    }\r\n    async playSwim() {\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        if(!this._isCandoAction(MarioStatus.swim))return;\r\n        this._anim.play(AnimMario.swim);\r\n    }\r\n\r\n    async playJump() {\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        let pos = this.node.getPosition();\r\n        this._jumpPoint = v3(pos.x,pos.y,pos.z);\r\n        pos.y+=5;\r\n        this.node.setPosition(pos);\r\n        if(!this._isCandoAction(MarioStatus.jump))return;\r\n        this._anim.play(AnimMario.jump);\r\n        this._rigidbody2d.applyForce(v2(0, 950), v2(0, 0), true);\r\n    }\r\n\r\n    /**\r\n     * 判断当前动作是否可以执行\r\n     * @param status \r\n     * @returns \r\n     */\r\n    private _isCandoAction(status:MarioStatus):Boolean{\r\n        if(this._isDeath) return false;\r\n        if(this._status == MarioStatus.death) return false;\r\n        if(this._status == status) return false;\r\n        this._status = status;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 左右移动\r\n     * @param pos \r\n     */\r\n    private _evtStartMove(pos: Vec3) {\r\n        if (!this._isMoving || this._status != MarioStatus.walk) {\r\n            if(this._status != MarioStatus.jump){\r\n                this.playWalk();\r\n            }\r\n        }\r\n        this._isMoving = true;\r\n        this._speed = pos.x < 0 ? -1 :1;\r\n    }\r\n    private _evtStop() {\r\n        this._isMoving = false;\r\n        this.playIdle();\r\n    }\r\n\r\n    /**\r\n     * 跳，给一个向上的force\r\n     */\r\n    private async _evtJump() {\r\n        if (!this._rigidbody2d) {\r\n            await this._loadRigidBody2d();\r\n        }\r\n        if (this._status == MarioStatus.jump) {\r\n            return;\r\n        }\r\n        this.playJump();\r\n    }\r\n\r\n    /**\r\n     * 与砖头上面接触\r\n     */\r\n    handleColliderUp() {\r\n        if (this._isMoving) {\r\n            this.playWalk();\r\n        }\r\n        else {\r\n            this.playIdle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 碰撞检测\r\n     * @param selfCollider  \r\n     * @param otherCollider \r\n     * @param contact \r\n     */\r\n    public onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        let name1 = selfCollider.node.name;\r\n        let name2 = otherCollider.node.name;\r\n        if(name2 == this._lastColliderName)return;\r\n        this._lastColliderName = name2;\r\n        if(name2.includes(\"tower\")){\r\n        }\r\n        if(Constant.FinishedGame)return;\r\n        if(name2.includes(\"flag\")){\r\n            this._check_gameOver();\r\n        }\r\n\r\n        if (name1.includes(\"mario\") && name2.includes(\"wall\")) {\r\n            let bk: brick = otherCollider.node.getComponent(brick);\r\n            let points = contact.getWorldManifold().points;\r\n            if (bk) {\r\n                if (points.length > 0) {\r\n                    let cPos = points[0];\r\n                    let bPos = otherCollider.node.getWorldPosition();\r\n                    if (cPos.y <= bPos.y - 8) {\r\n                        clientEvent.dispatchEvent(Constant.EVENT_TYPE.BrickMove + bk.index, bk.index);\r\n                    }\r\n                    else if (cPos.y >= bPos.y + 8) {\r\n                        let mar = selfCollider.node.getComponent(mario);\r\n                        mar.handleColliderUp();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (name1.includes(\"mario\") && name2.includes(\"coin\")) {\r\n            let bk: whyBrick = otherCollider.node.getComponent(whyBrick);\r\n            let points = contact.getWorldManifold().points;\r\n            if (bk) {\r\n                if (points.length > 0) {\r\n                    let cPos = points[0];\r\n                    let bPos = otherCollider.node.getWorldPosition();\r\n                    if (cPos.y <= bPos.y - 8) {\r\n                        clientEvent.dispatchEvent(Constant.EVENT_TYPE.TopWhy + bk.index, bk.index);\r\n                    }\r\n                    else if (cPos.y >= bPos.y + 8) {\r\n                        let mar = selfCollider.node.getComponent(mario);\r\n                        mar.handleColliderUp();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (name1.includes(\"mario\") && name2.includes(\"hole\")) {\r\n            let ut = otherCollider.node.getComponent(UITransformComponent);\r\n            let points = contact.getWorldManifold().points;\r\n            if (ut) {\r\n                if (points.length > 0) {\r\n                    let cPos = points[0];\r\n                    let bPos = otherCollider.node.getWorldPosition();\r\n                    if (cPos.y >= bPos.y + ut.height / 2) {\r\n                        let mar = selfCollider.node.getComponent(mario);\r\n                        mar.handleColliderUp();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (name1.includes(\"mario\") && name2.includes(\"ladder\")) {\r\n            let mar = selfCollider.node.getComponent(mario);\r\n            mar.handleColliderUp();\r\n        }\r\n    }\r\n\r\n    private _check_gameOver(){\r\n        console.log(\"finished_game\");\r\n        Constant.FinishedGame = true;\r\n        clientEvent.dispatchEvent(Constant.EVENT_TYPE.FinishedGame);\r\n        // this.playIdle();\r\n        // this.scheduleOnce(()=>{\r\n        //     this.playWalk();\r\n        //     let pos = this.node.getPosition();\r\n        //     let nPos = v3(pos.x+270,20.7,pos.z);\r\n        //     tween(this.node).to(2,{position:nPos}).call(()=>{}).start();\r\n        // },1);\r\n    }\r\n}\r\n\r\n"]}