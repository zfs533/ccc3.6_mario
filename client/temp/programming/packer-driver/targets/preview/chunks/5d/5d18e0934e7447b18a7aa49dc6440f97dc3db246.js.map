{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/framework/csvManager.ts"],"names":["_decorator","Component","error","resourceUtil","ccclass","property","CELL_DELIMITERS","LINE_DELIMITERS","getter","index","getterCast","value","cast","d","Array","Number","isNaN","CSV","STANDARD_DECODE_OPTS","skip","limit","header","comment","STANDARD_ENCODE_OPTS","delimiter","newline","quoteMark","doubleQuoteMark","quoteRegex","assign","args","prototype","slice","call","arguments","base","rest","i","len","length","attr","map","collection","fn","results","getType","obj","Object","toString","getLimit","buildObjectConstructor","fields","sample","object","setter","forEach","idx","buildArrayConstructor","row","frequency","coll","needle","count","lastIndex","maxIndex","indexOf","mostFrequent","needles","max","detected","cur","unsafeParse","text","opts","lines","split","splice","constructor","cells","line","shift","findIndex","list","item","quoteCount","start","end","key","hasOwnProperty","numKey","parseInt","substring","push","safeParse","encodeCells","replace","join","encodeArrays","lim","encodeObjects","key$1","parse","rows","bind","Math","min","floor","encode","CSVManager","loadCallback","cntLoad","curLoad","csvTablesLoaded","csvTables","csvTableForArr","tableCast","tableComment","instance","_instance","addTable","tableName","tableContent","force","tableData","tableArr","keyname","getTableArr","getTable","queryOne","table","tbItem","queryByID","ID","queryAll","ret","queryIn","values","keys","queryByCondition","condition","tableKeys","tableKeysLength","keysLength","fit","j","queryOneByCondition","keyName","loadTables","tables","cb","checkLoadFinished","getData","err","assets","message","console","log","name","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, error } from \"cc\";\r\nimport { resourceUtil } from \"./resourceUtil\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nvar CELL_DELIMITERS = [\",\", \";\", \"\\t\", \"|\", \"^\"];\r\nvar LINE_DELIMITERS = [\"\\r\\n\", \"\\r\", \"\\n\"];\r\n\r\nvar getter = function (index) {\r\n    return (\"d[\" + index + \"]\");\r\n};\r\n\r\nvar getterCast = function (value, index, cast, d) {\r\n\r\n    if (cast instanceof Array) {\r\n        if (cast[index] === \"number\") {\r\n            return Number(d[index]);\r\n        } else if (cast[index] === \"boolean\") {\r\n            return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\r\n        } else {\r\n            return d[index];\r\n        }\r\n    } else {\r\n        if (!isNaN(Number(value))) {\r\n            return Number(d[index]);\r\n        } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\r\n            return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\r\n        } else {\r\n            return d[index];\r\n        }\r\n    }\r\n};\r\n\r\nvar CSV = {\r\n    //\r\n\r\n    /* =========================================\r\n        * Constants ===============================\r\n        * ========================================= */\r\n\r\n    STANDARD_DECODE_OPTS: {\r\n        skip: 0,\r\n        limit: false,\r\n        header: false,\r\n        cast: false,\r\n        comment: \"\"\r\n    },\r\n\r\n    STANDARD_ENCODE_OPTS: {\r\n        delimiter: CELL_DELIMITERS[0],\r\n        newline: LINE_DELIMITERS[0],\r\n        skip: 0,\r\n        limit: false,\r\n        header: false\r\n    },\r\n\r\n    quoteMark: '\"',\r\n    doubleQuoteMark: '\"\"',\r\n    quoteRegex: /\"/g,\r\n\r\n    /* =========================================\r\n        * Utility Functions =======================\r\n        * ========================================= */\r\n    assign: function () {\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var base = args[0];\r\n        var rest = args.slice(1);\r\n        for (var i = 0, len = rest.length; i < len; i++) {\r\n            for (var attr in rest[i]) {\r\n                base[attr] = rest[i][attr];\r\n            }\r\n        }\r\n\r\n        return base;\r\n    },\r\n\r\n    map: function (collection, fn) {\r\n        var results = [];\r\n        for (var i = 0, len = collection.length; i < len; i++) {\r\n            results[i] = fn(collection[i], i);\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    getType: function (obj) {\r\n        return Object.prototype.toString.call(obj).slice(8, -1);\r\n    },\r\n\r\n    getLimit: function (limit, len) {\r\n        return limit === false ? len : limit;\r\n    },\r\n\r\n    buildObjectConstructor: function (fields, sample, cast) {\r\n        return function (d) {\r\n            var object = new Object();\r\n            var setter = function (attr, value) {\r\n                return object[attr] = value;\r\n            };\r\n            if (cast) {\r\n                fields.forEach(function (attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, cast, d));\r\n                });\r\n            } else {\r\n                fields.forEach(function (attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, null, d));\r\n                });\r\n            }\r\n            // body.push(\"return object;\");\r\n            // body.join(\";\\n\");\r\n            return object;\r\n        };\r\n    },\r\n\r\n    buildArrayConstructor: function (fields, sample, cast) {\r\n        return function (d) {\r\n            var row = new Array(sample.length);\r\n            var setter = function (idx, value) {\r\n                return row[idx] = value;\r\n            };\r\n            if (cast) {\r\n                fields.forEach(function (attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, cast, d));\r\n                });\r\n            } else {\r\n                fields.forEach(function (attr, idx) {\r\n                    setter(attr, getterCast(sample[idx], idx, null, d));\r\n                });\r\n            }\r\n            return row;\r\n        };\r\n    },\r\n\r\n    frequency: function (coll, needle, limit) {\r\n        if (limit === void 0) limit = false;\r\n\r\n        var count = 0;\r\n        var lastIndex = 0;\r\n        var maxIndex = this.getLimit(limit, coll.length);\r\n\r\n        while (lastIndex < maxIndex) {\r\n            lastIndex = coll.indexOf(needle, lastIndex);\r\n            if (lastIndex === -1) break;\r\n            lastIndex += 1;\r\n            count++;\r\n        }\r\n\r\n        return count;\r\n    },\r\n\r\n    mostFrequent: function (coll, needles, limit) {\r\n        var max = 0;\r\n        var detected;\r\n\r\n        for (var cur = needles.length - 1; cur >= 0; cur--) {\r\n            if (this.frequency(coll, needles[cur], limit) > max) {\r\n                detected = needles[cur];\r\n            }\r\n        }\r\n\r\n        return detected || needles[0];\r\n    },\r\n\r\n    unsafeParse: function (text, opts, fn) {\r\n        var lines = text.split(opts.newline);\r\n\r\n        if (opts.skip > 0) {\r\n            lines.splice(opts.skip);\r\n        }\r\n\r\n        var fields;\r\n        var constructor;\r\n\r\n        function cells(lines) {\r\n            var line = lines.shift();\r\n            if (line.indexOf('\"') >= 0) {// 含引号\r\n\r\n                // 找到这行完整的数据, 找到对称的双引号\r\n                var lastIndex = 0;\r\n                var findIndex = 0;\r\n                var count = 0;\r\n                while (lines.length > 0) {\r\n                    lastIndex = line.indexOf('\"', findIndex);\r\n                    if (lastIndex === -1 && count % 2 === 0) break;\r\n\r\n                    if (lastIndex !== -1) {\r\n                        findIndex = lastIndex + 1;\r\n                        count++;\r\n                    } else {\r\n                        line = line + opts.newline + lines.shift();\r\n                    }\r\n                }\r\n\r\n                var list = [];\r\n                var item;\r\n\r\n                var quoteCount = 0;\r\n\r\n                var start = 0;\r\n                var end = 0;\r\n                var length = line.length;\r\n                for (var key in line) {\r\n                    if (!line.hasOwnProperty(key)) {\r\n                        continue;\r\n                    }\r\n\r\n                    let numKey = parseInt(key);\r\n                    var value = line[key];\r\n\r\n                    if (numKey === 0 && value === '\"') {\r\n                        quoteCount++;\r\n                        start = 1;\r\n                    }\r\n\r\n                    if (value === '\"') {\r\n                        quoteCount++;\r\n\r\n                        if (line[numKey - 1] === opts.delimiter && start === numKey) {\r\n                            start++;\r\n                        }\r\n                    }\r\n\r\n                    if (value === '\"' && quoteCount % 2 === 0) {\r\n\r\n                        if (line[numKey + 1] === opts.delimiter || numKey + 1 === length) {\r\n                            end = numKey;\r\n                            item = line.substring(start, end);\r\n                            list.push(item);\r\n                            start = end + 2;\r\n                            end = start;\r\n                        }\r\n\r\n                    }\r\n\r\n                    if (value === opts.delimiter && quoteCount % 2 === 0) {\r\n                        end = numKey;\r\n                        if (end > start) {\r\n                            item = line.substring(start, end);\r\n                            list.push(item);\r\n                            start = end + 1;\r\n                            end = start;\r\n                        } else if (end === start) {\r\n                            list.push(\"\");\r\n                            start = end + 1;\r\n                            end = start;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                end = length;\r\n\r\n                if (end >= start) {\r\n                    item = line.substring(start, end);\r\n                    list.push(item);\r\n                }\r\n\r\n                return list;\r\n            } else {\r\n                return line.split(opts.delimiter);\r\n            }\r\n        }\r\n\r\n        if (opts.header) {\r\n            if (opts.header === true) {\r\n                opts.comment = cells(lines); // 第一行是注释\r\n                opts.cast = cells(lines); // 第二行是数据类型\r\n                fields = cells(lines);\r\n            } else if (this.getType(opts.header) === \"Array\") {\r\n                fields = opts.header;\r\n            }\r\n\r\n            constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\r\n        } else {\r\n            constructor = this.buildArrayConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            var row = cells(lines);\r\n            if (row.length > 1) {\r\n                fn(constructor(row), fields[0]);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    safeParse: function (text, opts, fn) {\r\n        var delimiter = opts.delimiter;\r\n        var newline = opts.newline;\r\n\r\n        var lines = text.split(newline);\r\n        if (opts.skip > 0) {\r\n            lines.splice(opts.skip);\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    encodeCells: function (line, delimiter, newline) {\r\n        var row = line.slice(0);\r\n        for (var i = 0, len = row.length; i < len; i++) {\r\n            if (row[i].indexOf(this.quoteMark) !== -1) {\r\n                row[i] = row[i].replace(this.quoteRegex, this.doubleQuoteMark);\r\n            }\r\n\r\n            if (row[i].indexOf(delimiter) !== -1 || row[i].indexOf(newline) !== -1) {\r\n                row[i] = this.quoteMark + row[i] + this.quoteMark;\r\n            }\r\n        }\r\n\r\n        return row.join(delimiter);\r\n    },\r\n\r\n    encodeArrays: function (coll, opts, fn) {\r\n        var delimiter = opts.delimiter;\r\n        var newline = opts.newline;\r\n\r\n        if (opts.header && this.getType(opts.header) === \"Array\") {\r\n            fn(this.encodeCells(opts.header, delimiter, newline));\r\n        }\r\n\r\n        for (var cur = 0, lim = this.getLimit(opts.limit, coll.length); cur < lim; cur++) {\r\n            fn(this.encodeCells(coll[cur], delimiter, newline));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    encodeObjects: function (coll, opts, fn) {\r\n        var delimiter = opts.delimiter;\r\n        var newline = opts.newline;\r\n        var header;\r\n        var row;\r\n\r\n        header = [];\r\n        row = [];\r\n        for (var key in coll[0]) {\r\n            header.push(key);\r\n            row.push(coll[0][key]);\r\n        }\r\n\r\n        if (opts.header === true) {\r\n            fn(this.encodeCells(header, delimiter, newline));\r\n        } else if (this.getType(opts.header) === \"Array\") {\r\n            fn(this.encodeCells(opts.header, delimiter, newline));\r\n        }\r\n\r\n        fn(this.encodeCells(row, delimiter));\r\n\r\n        for (var cur = 1, lim = this.getLimit(opts.limit, coll.length); cur < lim; cur++) {\r\n            row = [];\r\n            for (var key$1 = 0, len = header.length; key$1 < len; key$1++) {\r\n                row.push(coll[cur][header[key$1]]);\r\n            }\r\n\r\n            fn(this.encodeCells(row, delimiter, newline));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    parse: function (text, opts, fn) {\r\n        var rows;\r\n\r\n        if (this.getType(opts) === \"Function\") {\r\n            fn = opts;\r\n            opts = {};\r\n        } else if (this.getType(fn) !== \"Function\") {\r\n            rows = [];\r\n            fn = rows.push.bind(rows);\r\n        } else {\r\n            rows = [];\r\n        }\r\n\r\n        opts = this.assign({}, this.STANDARD_DECODE_OPTS, opts);\r\n        this.opts = opts;\r\n\r\n        if (!opts.delimiter || !opts.newline) {\r\n            var limit = Math.min(48, Math.floor(text.length / 20), text.length);\r\n            opts.delimiter = opts.delimiter || this.mostFrequent(text, CELL_DELIMITERS, limit);\r\n            opts.newline = opts.newline || this.mostFrequent(text, LINE_DELIMITERS, limit);\r\n        }\r\n\r\n        // modify by jl 由表自行控制不要含有双引号.提高解析效率\r\n        return this.unsafeParse(text, opts, fn) &&\r\n            (rows.length > 0 ? rows : true);\r\n    },\r\n\r\n    encode: function (coll, opts, fn) {\r\n        var lines;\r\n\r\n        if (this.getType(opts) === \"Function\") {\r\n            fn = opts;\r\n            opts = {};\r\n        } else if (this.getType(fn) !== \"Function\") {\r\n            lines = [];\r\n            fn = lines.push.bind(lines);\r\n        }\r\n\r\n        opts = this.assign({}, this.STANDARD_ENCODE_OPTS, opts);\r\n\r\n        if (opts.skip > 0) {\r\n            coll = coll.slice(opts.skip);\r\n        }\r\n\r\n        return (this.getType(coll[0]) === \"Array\" ? this.encodeArrays : this.encodeObjects)(coll, opts, fn) &&\r\n            (lines.length > 0 ? lines.join(opts.newline) : true);\r\n    }\r\n};\r\n\r\n@ccclass(\"CSVManager\")\r\nexport class CSVManager extends Component {\r\n    /* class member could be defined like this */\r\n\r\n    static _instance: CSVManager;\r\n    loadCallback: Function;\r\n    cntLoad: number;\r\n    curLoad: number;\r\n\r\n    static get instance() {\r\n        if (this._instance) {\r\n            return this._instance;\r\n        }\r\n\r\n        this._instance = new CSVManager();\r\n        return this._instance;\r\n    }\r\n\r\n    csvTablesLoaded = {};\r\n\r\n    csvTables: any = {};\r\n    csvTableForArr: any = {};\r\n    tableCast: any = {};\r\n    tableComment: any = {};\r\n\r\n    addTable(tableName: string, tableContent: string, force?: boolean) {\r\n        if (this.csvTables[tableName] && !force) {\r\n            return;\r\n        }\r\n\r\n        var tableData = {};\r\n        var tableArr = [];\r\n        var opts = { header: true };\r\n        CSV.parse(tableContent, opts, function (row, keyname) {\r\n            tableData[row[keyname]] = row;\r\n            tableArr.push(row);\r\n        });\r\n\r\n        this.tableCast[tableName] = (CSV as any).opts.cast;\r\n        this.tableComment[tableName] = (CSV as any).opts.comment;\r\n\r\n        this.csvTables[tableName] = tableData;\r\n        this.csvTableForArr[tableName] = tableArr;\r\n\r\n        //this.csvTables[tableName].initFromText(tableContent);\r\n    }\r\n\r\n    getTableArr(tableName: string) {\r\n        return this.csvTableForArr[tableName];\r\n    }\r\n\r\n    getTable(tableName: string) {\r\n        return this.csvTables[tableName];\r\n    }\r\n\r\n    queryOne(tableName: string, key: string, value: any) {\r\n        var table = this.getTable(tableName);\r\n        if (!table) {\r\n            return null;\r\n        }\r\n\r\n        if (key) {\r\n            for (var tbItem in table) {\r\n                if (!table.hasOwnProperty(tbItem)) {\r\n                    continue;\r\n                }\r\n\r\n                if (table[tbItem][key] === value) {\r\n                    return table[tbItem];\r\n                }\r\n            }\r\n        } else {\r\n            return table[value];\r\n        }\r\n    }\r\n\r\n    queryByID(tableName: string, ID: string) {\r\n        return this.queryOne(tableName, null, ID);\r\n    }\r\n\r\n    queryAll(tableName: string, key: string, value: any) {\r\n        var table = this.getTable(tableName);\r\n        if (!table || !key) {\r\n            return null;\r\n        }\r\n\r\n        var ret = {};\r\n        for (var tbItem in table) {\r\n            if (!table.hasOwnProperty(tbItem)) {\r\n                continue;\r\n            }\r\n\r\n            if (table[tbItem][key] === value) {\r\n                ret[tbItem] = table[tbItem];\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    queryIn(tableName: string, key: string, values: Array<any>) {\r\n        var table = this.getTable(tableName);\r\n        if (!table || !key) {\r\n            return null;\r\n        }\r\n\r\n        var ret = {};\r\n        var keys = Object.keys(table);\r\n        var length = keys.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var item = table[keys[i]];\r\n            if (values.indexOf(item[key]) > -1) {\r\n                ret[keys[i]] = item;\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    queryByCondition(tableName: string, condition: any) {\r\n        if (condition.constructor !== Object) {\r\n            return null;\r\n        }\r\n\r\n        var table = this.getTable(tableName);\r\n        if (!table) {\r\n            return null;\r\n        }\r\n\r\n        var ret = {};\r\n        var tableKeys = Object.keys(table);\r\n        var tableKeysLength = tableKeys.length;\r\n        var keys = Object.keys(condition);\r\n        var keysLength = keys.length;\r\n        for (var i = 0; i < tableKeysLength; i++) {\r\n            var item = table[tableKeys[i]];\r\n            var fit = true;\r\n            for (var j = 0; j < keysLength; j++) {\r\n                var key = keys[j];\r\n                fit = fit && (condition[key] === item[key]) && !ret[tableKeys[i]];\r\n            }\r\n\r\n            if (fit) {\r\n                ret[tableKeys[i]] = item;\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    queryOneByCondition(tableName: string, condition: any) {\r\n        if (condition.constructor !== Object) {\r\n            return null;\r\n        }\r\n\r\n        var table = this.getTable(tableName);\r\n        if (!table) {\r\n            return null;\r\n        }\r\n\r\n        var keys = Object.keys(condition);\r\n        var keysLength = keys.length;\r\n\r\n        for (let keyName in table) {\r\n            var item = table[keyName];\r\n\r\n            var fit = true;\r\n            for (var j = 0; j < keysLength; j++) {\r\n                var key = keys[j];\r\n                fit = fit && (condition[key] === item[key]);\r\n            }\r\n\r\n            if (fit) {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 加载CSV\r\n     * @param tables 表名数组\r\n     * @param cb 加载完成\r\n     * @method loadTables\r\n     */\r\n    loadTables(tables: Array<string>, cb: Function) {\r\n        if (tables.length > 0) {\r\n            this.loadCallback = cb;\r\n            this.cntLoad = tables.length;\r\n            this.curLoad = 0;\r\n            // let loadSuccess = false;\r\n            tables.forEach((table, index) => {\r\n                if (this.csvTablesLoaded[table]) {\r\n                    //  已加载过该CSV\r\n                    if (index == tables.length - 1) {\r\n                        // loadSuccess = true;\r\n                        // cb && cb();\r\n                        this.checkLoadFinished();\r\n                    }\r\n                    return;\r\n                }\r\n                this.csvTablesLoaded[table] = true;\r\n\r\n                resourceUtil.getData(table, (err, assets) => {\r\n                    if (err) {\r\n                        error(err.message || err);\r\n                        return;\r\n                    }\r\n\r\n\r\n\r\n                    console.log(assets.name);\r\n                    this.addTable(assets.name, assets.text);\r\n                    this.checkLoadFinished();\r\n                    // if (index == tables.length - 1) {\r\n                    //     loadSuccess = true;\r\n                    //     cb && cb();\r\n                    // }\r\n                });\r\n            });\r\n\r\n            setTimeout(() => {\r\n                if (this.loadCallback && cb) {\r\n                    cb();\r\n                }\r\n            }, 10000);\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    checkLoadFinished() {\r\n        this.curLoad++;\r\n\r\n        if (this.curLoad >= this.cntLoad) {\r\n            let cb = this.loadCallback;\r\n            this.loadCallback = null;\r\n            cb && cb();\r\n        }\r\n    }\r\n}\r\n"]}