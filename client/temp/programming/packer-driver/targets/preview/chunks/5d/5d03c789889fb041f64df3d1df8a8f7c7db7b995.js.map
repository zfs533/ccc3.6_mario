{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/ui/joystick/joystick.ts"],"names":["_decorator","Component","Node","Vec3","UITransform","input","Input","KeyCode","AudioManager","clientEvent","Constant","ccclass","property","joystick","_originPos","_R","_offsetX","_isUseful","onLoad","node","on","EventType","TOUCH_START","_touchStart","TOUCH_MOVE","_touchMove","TOUCH_END","_touchEnd","TOUCH_CANCEL","set","joystickBg","getPosition","x","y","KEY_DOWN","_onKeyDown","KEY_UP","_onKeyUp","start","_addListener","event","touchPos","getUILocation","pos","parent","getComponent","convertToNodeSpaceAR","setPosition","radius","Math","atan2","out","len","subtract","length","xx","cos","yy","sin","joystickBar","bPos","dispatchEvent","EVENT_TYPE","Move","Stop","e","keyCode","KEY_A","KEY_D","SPACE","jump","console","log","MoveJoystick","_evtMoveJoystick","onDestroy","off","offset","instance","playSound","Jump","undefined"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, EventTouch, Vec3, UITransform, input, Input, EventKeyboard, KeyCode, view } from 'cc';\r\nimport { AudioManager } from '../../../framework/audioManager';\r\nimport { clientEvent } from '../../../framework/clientEvent';\r\nimport { Constant } from '../../../framework/constant';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('joystick')\r\nexport class joystick extends Component {\r\n    @property(Node)\r\n    joystickBg: Node = undefined as unknown as Node;\r\n\r\n    @property(Node)\r\n    joystickBar: Node = undefined as unknown as Node;\r\n\r\n    private _originPos: Vec3 = new Vec3();\r\n\r\n    private _R: number = 100;\r\n    private _offsetX: number = 0;\r\n    private _isUseful: boolean = false;\r\n\r\n    onLoad() {\r\n        this.node.on(Node.EventType.TOUCH_START, this._touchStart, this);\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this._touchMove, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this._touchEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this._touchEnd, this);\r\n        this._originPos.set(this.joystickBg.getPosition().x, this.joystickBg.getPosition().y, 0);\r\n        //键盘事件test\r\n        input.on(Input.EventType.KEY_DOWN, this._onKeyDown, this);\r\n        input.on(Input.EventType.KEY_UP, this._onKeyUp, this);\r\n    }\r\n\r\n    start() {\r\n        this._addListener();\r\n    }\r\n\r\n    private _touchStart(event: EventTouch) {\r\n        let touchPos = event.getUILocation();\r\n        let pos = new Vec3(touchPos.x, touchPos.y, 0);\r\n        pos = this.node.parent?.getComponent(UITransform)?.convertToNodeSpaceAR(pos) as Vec3;\r\n        /* 控制点击区域在左下半区 */\r\n        if (pos.x > 0 || pos.y > 0) {\r\n            this._isUseful = false;\r\n            return;\r\n        }\r\n        this._isUseful = true;\r\n        this.joystickBg.setPosition(pos);\r\n    }\r\n\r\n    private _touchMove(event: EventTouch) {\r\n        if (!this._isUseful) {\r\n            return;\r\n        }\r\n        let touchPos = event.getUILocation();\r\n        let pos = new Vec3(touchPos.x, touchPos.y, 0);\r\n        pos = this.joystickBg?.getComponent(UITransform)?.convertToNodeSpaceAR(pos) as Vec3;\r\n        pos.x += this._offsetX;\r\n\r\n        let radius = Math.atan2(pos.y, pos.x);\r\n        let out = new Vec3();\r\n        let len = Vec3.subtract(out, pos, new Vec3()).length();\r\n        //控制移动范围在摇杆背景圆内\r\n        if (len >= this._R) {\r\n            let xx = Math.cos(radius) * this._R;\r\n            let yy = Math.sin(radius) * this._R;\r\n            this.joystickBar.setPosition(new Vec3(xx, yy, 0));\r\n        }\r\n        else {\r\n            this.joystickBar.setPosition(pos);\r\n        }\r\n        let bPos = this.joystickBar.getPosition();\r\n        clientEvent.dispatchEvent(Constant.EVENT_TYPE.Move, bPos);\r\n    }\r\n\r\n    private _touchEnd(event: EventTouch) {\r\n        if (!this._isUseful) return;\r\n        this._isUseful = false;\r\n        this.joystickBg.setPosition(this._originPos);\r\n        this.joystickBar.setPosition(new Vec3());\r\n        clientEvent.dispatchEvent(Constant.EVENT_TYPE.Stop);\r\n    }\r\n    private _onKeyDown(e: EventKeyboard) {\r\n        switch (e.keyCode) {\r\n            case KeyCode.KEY_A:\r\n                clientEvent.dispatchEvent(Constant.EVENT_TYPE.Move, new Vec3(-1, 0, 0));\r\n                break;\r\n            case KeyCode.KEY_D:\r\n                clientEvent.dispatchEvent(Constant.EVENT_TYPE.Move, new Vec3(1, 0, 0));\r\n                break;\r\n            case KeyCode.SPACE:\r\n                this.jump();\r\n                break;\r\n        }\r\n    }\r\n    private _onKeyUp(e: EventKeyboard) {\r\n        switch (e.keyCode) {\r\n            case KeyCode.KEY_A:\r\n                clientEvent.dispatchEvent(Constant.EVENT_TYPE.Stop);\r\n                break;\r\n            case KeyCode.KEY_D:\r\n                clientEvent.dispatchEvent(Constant.EVENT_TYPE.Stop);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _addListener() {\r\n        console.log(\"addlistener\")\r\n        clientEvent.on(Constant.EVENT_TYPE.MoveJoystick, this._evtMoveJoystick, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.MoveJoystick, this._evtMoveJoystick, this);\r\n    }\r\n\r\n    /**\r\n     * 摇杆跟着摄像机移动\r\n     * @param params \r\n     */\r\n    private _evtMoveJoystick(offset: number) {\r\n        let pos = this.node.getPosition();\r\n        pos.x += offset;\r\n        this._offsetX += offset;\r\n        // console.log(pos);\r\n        this.node.setPosition(pos);\r\n    }\r\n\r\n    private jump() {\r\n        AudioManager.instance.playSound(\"smb_jumpsmall\",false);\r\n        clientEvent.dispatchEvent(Constant.EVENT_TYPE.Jump);\r\n    }\r\n}\r\n\r\n"]}