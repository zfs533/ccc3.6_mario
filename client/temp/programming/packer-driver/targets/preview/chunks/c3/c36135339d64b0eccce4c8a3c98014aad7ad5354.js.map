{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/pieces/coin.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","AudioManager","clientEvent","Constant","getBrickIndex","ccclass","property","coin","index","_isDistoried","_lastColliderName","onEnable","_init","_addListener","on","EVENT_TYPE","CoinRemove","_evtCoinRemove","onDestroy","off","console","log","_handleCollider","isImideltly","instance","playSound","node","destroy","scheduleOnce","collider","getChildByName","getComponent","BEGIN_CONTACT","onBeginContact","END_CONTACT","_onEndContact","selfCollider","otherCollider","contact","name1","name","name2","includes"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, BoxCollider2D, RigidBody2D, Collider2D, IPhysics2DContact, Contact2DType } from 'cc';\r\nimport { AudioManager } from '../../framework/audioManager';\r\nimport { clientEvent } from '../../framework/clientEvent';\r\nimport { Constant } from '../../framework/constant';\r\nimport { PoolManager } from '../../framework/poolManager';\r\nimport { getBrickIndex } from '../../net/util';\r\nimport { baseCollider } from '../collider/baseCollider';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('coin')\r\nexport class coin extends Component {\r\n    public index: number = 0;\r\n    private _isDistoried:boolean = false;\r\n    private _lastColliderName:string = \"\";\r\n    onEnable() {\r\n        this._init();\r\n        this._addListener();\r\n    }\r\n\r\n    private _addListener() {\r\n        clientEvent.on(Constant.EVENT_TYPE.CoinRemove + this.index, this._evtCoinRemove, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.CoinRemove + this.index, this._evtCoinRemove, this);\r\n    }\r\n    private _init() {\r\n        this.index = getBrickIndex();\r\n        console.log(this.index);\r\n        this._handleCollider();\r\n    }\r\n\r\n    private _evtCoinRemove(isImideltly: boolean = false) {\r\n        console.log(\"this._isDistoried: \"+this._isDistoried+  \"  index: \"+this.index);\r\n        if(this._isDistoried) return;\r\n        this._isDistoried = true;\r\n        AudioManager.instance.playSound(\"smb_coin\",false);\r\n        // this.scheduleOnce(()=>{\r\n            if (isImideltly) {\r\n                this.node.destroy();\r\n                // PoolManager.Inst.setNode(this.node);\r\n            }\r\n            else {\r\n                this.scheduleOnce(() => {\r\n                    this.node.destroy();\r\n                    // PoolManager.Inst.setNode(this.node);\r\n                }, 0.5);\r\n            }\r\n        // },0.0000001);\r\n    }\r\n\r\n    private _handleCollider() {\r\n        let collider = this.node.getChildByName(\"coinCollider\").getComponent(Collider2D);\r\n        if (collider) {\r\n            console.log(\"collider : \"+collider);\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this._onEndContact, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 碰撞检测\r\n     * @param selfCollider  \r\n     * @param otherCollider \r\n     * @param contact \r\n     */\r\n     public onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n         // 只在两个碰撞体开始接触时被调用一次\r\n         let name1 = selfCollider.node.name;\r\n         let name2 = otherCollider.node.name;\r\n         console.log('start_collider : '+this.index);\r\n         if(name2 == this._lastColliderName)return;\r\n         this._lastColliderName = name2;\r\n         if(name2.includes(\"mario\")){\r\n            this._evtCoinRemove(true);\r\n         }\r\n     }\r\n     private _onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        // console.log('onEndContact');\r\n    }\r\n}\r\n\r\n"]}