{"version":3,"sources":["file:///D:/CocosDashboard/resources/.editors/Creator/3.6.0/resources/app.asar.unpacked/modules/editor-extensions/extensions/localization-editor/node_modules/@formatjs/intl-datetimeformat/src/abstract/ToLocalTime.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","ToLocalTime","ecma402_abstract_1","getApplicableZoneData","t","timeZone","tzData","_a","zoneData","i","offset","dst","length","calendar","invariant","Type","_b","timeZoneOffset","inDST","tz","year","YearFromTime","weekday","WeekDay","era","relatedYear","undefined","yearName","month","MonthFromTime","day","DateFromTime","hour","HourFromTime","minute","MinFromTime","second","SecFromTime","millisecond","msFromTime","_cjsExports","___esModule","__esModule","_ToLocalTime"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '@formatjs/ecma402-abstract';\nlet _cjsExports;\nlet ___esModule;\nlet _ToLocalTime;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.ToLocalTime = void 0;\n var ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n function getApplicableZoneData(t, timeZone, tzData) {\n     var _a;\n     var zoneData = tzData[timeZone];\n     // We don't have data for this so just say it's UTC\n     if (!zoneData) {\n         return [0, false];\n     }\n     var i = 0;\n     var offset = 0;\n     var dst = false;\n     for (; i <= zoneData.length; i++) {\n         if (i === zoneData.length || zoneData[i][0] * 1e3 > t) {\n             ;\n             _a = zoneData[i - 1], offset = _a[2], dst = _a[3];\n             break;\n         }\n     }\n     return [offset * 1e3, dst];\n }\n /**\n  * https://tc39.es/ecma402/#sec-tolocaltime\n  * @param t\n  * @param calendar\n  * @param timeZone\n  */\n function ToLocalTime(t, calendar, timeZone, _a) {\n     var tzData = _a.tzData;\n     (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(t) === 'Number', 'invalid time');\n     (0, ecma402_abstract_1.invariant)(calendar === 'gregory', 'We only support Gregory calendar right now');\n     var _b = getApplicableZoneData(t, timeZone, tzData), timeZoneOffset = _b[0], inDST = _b[1];\n     var tz = t + timeZoneOffset;\n     var year = (0, ecma402_abstract_1.YearFromTime)(tz);\n     return {\n         weekday: (0, ecma402_abstract_1.WeekDay)(tz),\n         era: year < 0 ? 'BC' : 'AD',\n         year: year,\n         relatedYear: undefined,\n         yearName: undefined,\n         month: (0, ecma402_abstract_1.MonthFromTime)(tz),\n         day: (0, ecma402_abstract_1.DateFromTime)(tz),\n         hour: (0, ecma402_abstract_1.HourFromTime)(tz),\n         minute: (0, ecma402_abstract_1.MinFromTime)(tz),\n         second: (0, ecma402_abstract_1.SecFromTime)(tz),\n         millisecond: (0, ecma402_abstract_1.msFromTime)(tz),\n         inDST: inDST,\n         // IMPORTANT: Not in spec\n         timeZoneOffset: timeZoneOffset,\n     };\n }\n exports.ToLocalTime = ToLocalTime;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_ToLocalTime = module.exports.ToLocalTime;\n\n}, () => ({\n  '@formatjs/ecma402-abstract': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}