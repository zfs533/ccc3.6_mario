{"version":3,"sources":["file:///D:/CocosDashboard/resources/.editors/Creator/3.6.0/resources/app.asar.unpacked/modules/editor-extensions/extensions/localization-editor/node_modules/@formatjs/intl-datetimeformat/src/abstract/BestFitFormatMatcher.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","BestFitFormatMatcher","bestFitFormatMatcherScore","tslib_1","ecma402_abstract_1","utils_1","skeleton_1","isNumericType","t","options","format","score","hour12","removalPenalty","additionPenalty","_i","DATE_TIME_PROPS_1","DATE_TIME_PROPS","length","prop","optionsProp","formatProp","undefined","differentNumericTypePenalty","values","optionsPropIndex","indexOf","formatPropIndex","delta","Math","max","min","longMorePenalty","shortMorePenalty","shortLessPenalty","longLessPenalty","formats","bestScore","Infinity","bestFormat","invariant","Array","isArray","formats_1","skeletonFormat","__assign","patternFormat","rawPattern","processDateTimePattern","skeletonValue","patternValue","requestedValue","pattern","pattern12","skeleton","rangePatterns","rangePatterns12","_cjsExports","___esModule","__esModule","_BestFitFormatMatcher","_bestFitFormatMatcherScore"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'tslib';\nimport { __cjsMetaURL as _req0} from '@formatjs/ecma402-abstract';\nimport { __cjsMetaURL as _req1} from './utils';\nimport { __cjsMetaURL as _req2} from './skeleton';\nlet _cjsExports;\nlet ___esModule;\nlet _BestFitFormatMatcher;\nlet _bestFitFormatMatcherScore;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.BestFitFormatMatcher = exports.bestFitFormatMatcherScore = void 0;\n var tslib_1 = require(\"tslib\");\n var ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n var utils_1 = require(\"./utils\");\n var skeleton_1 = require(\"./skeleton\");\n function isNumericType(t) {\n     return t === 'numeric' || t === '2-digit';\n }\n /**\n  * Credit: https://github.com/andyearnshaw/Intl.js/blob/0958dc1ad8153f1056653ea22b8208f0df289a4e/src/12.datetimeformat.js#L611\n  * with some modifications\n  * @param options\n  * @param format\n  */\n function bestFitFormatMatcherScore(options, format) {\n     var score = 0;\n     if (options.hour12 && !format.hour12) {\n         score -= utils_1.removalPenalty;\n     }\n     else if (!options.hour12 && format.hour12) {\n         score -= utils_1.additionPenalty;\n     }\n     for (var _i = 0, DATE_TIME_PROPS_1 = utils_1.DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {\n         var prop = DATE_TIME_PROPS_1[_i];\n         var optionsProp = options[prop];\n         var formatProp = format[prop];\n         if (optionsProp === undefined && formatProp !== undefined) {\n             score -= utils_1.additionPenalty;\n         }\n         else if (optionsProp !== undefined && formatProp === undefined) {\n             score -= utils_1.removalPenalty;\n         }\n         else if (optionsProp !== formatProp) {\n             // extra penalty for numeric vs non-numeric\n             if (isNumericType(optionsProp) !==\n                 isNumericType(formatProp)) {\n                 score -= utils_1.differentNumericTypePenalty;\n             }\n             else {\n                 var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n                 var optionsPropIndex = values.indexOf(optionsProp);\n                 var formatPropIndex = values.indexOf(formatProp);\n                 var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n                 if (delta === 2) {\n                     score -= utils_1.longMorePenalty;\n                 }\n                 else if (delta === 1) {\n                     score -= utils_1.shortMorePenalty;\n                 }\n                 else if (delta === -1) {\n                     score -= utils_1.shortLessPenalty;\n                 }\n                 else if (delta === -2) {\n                     score -= utils_1.longLessPenalty;\n                 }\n             }\n         }\n     }\n     return score;\n }\n exports.bestFitFormatMatcherScore = bestFitFormatMatcherScore;\n /**\n  * https://tc39.es/ecma402/#sec-bestfitformatmatcher\n  * Just alias to basic for now\n  * @param options\n  * @param formats\n  * @param implDetails Implementation details\n  */\n function BestFitFormatMatcher(options, formats) {\n     var bestScore = -Infinity;\n     var bestFormat = formats[0];\n     (0, ecma402_abstract_1.invariant)(Array.isArray(formats), 'formats should be a list of things');\n     for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n         var format = formats_1[_i];\n         var score = bestFitFormatMatcherScore(options, format);\n         if (score > bestScore) {\n             bestScore = score;\n             bestFormat = format;\n         }\n     }\n     var skeletonFormat = (0, tslib_1.__assign)({}, bestFormat);\n     var patternFormat = { rawPattern: bestFormat.rawPattern };\n     (0, skeleton_1.processDateTimePattern)(bestFormat.rawPattern, patternFormat);\n     // Kinda following https://github.com/unicode-org/icu/blob/dd50e38f459d84e9bf1b0c618be8483d318458ad/icu4j/main/classes/core/src/com/ibm/icu/text/DateTimePatternGenerator.java\n     // Method adjustFieldTypes\n     for (var prop in skeletonFormat) {\n         var skeletonValue = skeletonFormat[prop];\n         var patternValue = patternFormat[prop];\n         var requestedValue = options[prop];\n         // Don't mess with minute/second or we can get in the situation of\n         // 7:0:0 which is weird\n         if (prop === 'minute' || prop === 'second') {\n             continue;\n         }\n         // Nothing to do here\n         if (!requestedValue) {\n             continue;\n         }\n         // https://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons\n         // Looks like we should not convert numeric to alphabetic but the other way\n         // around is ok\n         if (isNumericType(patternValue) &&\n             !isNumericType(requestedValue)) {\n             continue;\n         }\n         if (skeletonValue === requestedValue) {\n             continue;\n         }\n         patternFormat[prop] = requestedValue;\n     }\n     // Copy those over\n     patternFormat.pattern = skeletonFormat.pattern;\n     patternFormat.pattern12 = skeletonFormat.pattern12;\n     patternFormat.skeleton = skeletonFormat.skeleton;\n     patternFormat.rangePatterns = skeletonFormat.rangePatterns;\n     patternFormat.rangePatterns12 = skeletonFormat.rangePatterns12;\n     return patternFormat;\n }\n exports.BestFitFormatMatcher = BestFitFormatMatcher;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_BestFitFormatMatcher = module.exports.BestFitFormatMatcher;\n_bestFitFormatMatcherScore = module.exports.bestFitFormatMatcherScore;\n\n}, () => ({\n  'tslib': _req,\n  '@formatjs/ecma402-abstract': _req0,\n  './utils': _req1,\n  './skeleton': _req2,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}