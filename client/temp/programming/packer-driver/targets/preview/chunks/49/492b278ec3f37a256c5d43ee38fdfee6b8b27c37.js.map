{"version":3,"sources":["file:///D:/CocosDashboard/resources/.editors/Creator/3.6.0/resources/app.asar.unpacked/modules/editor-extensions/extensions/localization-editor/node_modules/@formatjs/intl-datetimeformat/src/abstract/skeleton.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","splitRangePattern","splitFallbackRangePattern","parseDateTimeSkeleton","processDateTimePattern","tslib_1","ecma402_abstract_1","DATE_TIME_REGEX","expPatternTrimmer","matchSkeletonPattern","match","result","len","length","era","year","RangeError","month","day","weekday","undefined","hour12","hour","minute","second","timeZoneName","skeletonTokenToTable2","c","pattern","literals","pattern12","replace","_","literal","push","concat","m","i","skeleton","rawPattern","rangePatterns","intervalFormatFallback","rangePatterns12","k","key","rawPattern_1","intervalResult","patternParts","_a","pattern_1","pattern12_1","__assign","default","_b","parts","split","filter","Boolean","map","source","RangePatternType","startRange","endRange","shared","PART_REGEX","splitIndex","exec","index","slice","_cjsExports","___esModule","__esModule","_splitRangePattern","_splitFallbackRangePattern","_parseDateTimeSkeleton","_processDateTimePattern"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'tslib';\nimport { __cjsMetaURL as _req0} from '@formatjs/ecma402-abstract';\nlet _cjsExports;\nlet ___esModule;\nlet _splitRangePattern;\nlet _splitFallbackRangePattern;\nlet _parseDateTimeSkeleton;\nlet _processDateTimePattern;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.splitRangePattern = exports.splitFallbackRangePattern = exports.parseDateTimeSkeleton = exports.processDateTimePattern = void 0;\n var tslib_1 = require(\"tslib\");\n var ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n /**\n  * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n  * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n  * with some tweaks\n  */\n var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n // trim patterns after transformations\n var expPatternTrimmer = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n function matchSkeletonPattern(match, result) {\n     var len = match.length;\n     switch (match[0]) {\n         // Era\n         case 'G':\n             result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n             return '{era}';\n         // Year\n         case 'y':\n         case 'Y':\n         case 'u':\n         case 'U':\n         case 'r':\n             result.year = len === 2 ? '2-digit' : 'numeric';\n             return '{year}';\n         // Quarter\n         case 'q':\n         case 'Q':\n             throw new RangeError('`w/Q` (quarter) patterns are not supported');\n         // Month\n         case 'M':\n         case 'L':\n             result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n             return '{month}';\n         // Week\n         case 'w':\n         case 'W':\n             throw new RangeError('`w/W` (week of year) patterns are not supported');\n         case 'd':\n             result.day = ['numeric', '2-digit'][len - 1];\n             return '{day}';\n         case 'D':\n         case 'F':\n         case 'g':\n             result.day = 'numeric';\n             return '{day}';\n         // Weekday\n         case 'E':\n             result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n             return '{weekday}';\n         case 'e':\n             result.weekday = [\n                 undefined,\n                 undefined,\n                 'short',\n                 'long',\n                 'narrow',\n                 'short',\n             ][len - 1];\n             return '{weekday}';\n         case 'c':\n             result.weekday = [\n                 undefined,\n                 undefined,\n                 'short',\n                 'long',\n                 'narrow',\n                 'short',\n             ][len - 1];\n             return '{weekday}';\n         // Period\n         case 'a': // AM, PM\n         case 'b': // am, pm, noon, midnight\n         case 'B': // flexible day periods\n             result.hour12 = true;\n             return '{ampm}';\n         // Hour\n         case 'h':\n             result.hour = ['numeric', '2-digit'][len - 1];\n             result.hour12 = true;\n             return '{hour}';\n         case 'H':\n             result.hour = ['numeric', '2-digit'][len - 1];\n             return '{hour}';\n         case 'K':\n             result.hour = ['numeric', '2-digit'][len - 1];\n             result.hour12 = true;\n             return '{hour}';\n         case 'k':\n             result.hour = ['numeric', '2-digit'][len - 1];\n             return '{hour}';\n         case 'j':\n         case 'J':\n         case 'C':\n             throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n         // Minute\n         case 'm':\n             result.minute = ['numeric', '2-digit'][len - 1];\n             return '{minute}';\n         // Second\n         case 's':\n             result.second = ['numeric', '2-digit'][len - 1];\n             return '{second}';\n         case 'S':\n         case 'A':\n             result.second = 'numeric';\n             return '{second}';\n         // Zone\n         case 'z': // 1..3, 4: specific non-location format\n         case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n         case 'O': // 1, 4: miliseconds in day short, long\n         case 'v': // 1, 4: generic non-location format\n         case 'V': // 1, 2, 3, 4: time zone ID or city\n         case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n         case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n             result.timeZoneName = len < 4 ? 'short' : 'long';\n             return '{timeZoneName}';\n     }\n     return '';\n }\n function skeletonTokenToTable2(c) {\n     switch (c) {\n         // Era\n         case 'G':\n             return 'era';\n         // Year\n         case 'y':\n         case 'Y':\n         case 'u':\n         case 'U':\n         case 'r':\n             return 'year';\n         // Month\n         case 'M':\n         case 'L':\n             return 'month';\n         // Day\n         case 'd':\n         case 'D':\n         case 'F':\n         case 'g':\n             return 'day';\n         // Period\n         case 'a': // AM, PM\n         case 'b': // am, pm, noon, midnight\n         case 'B': // flexible day periods\n             return 'ampm';\n         // Hour\n         case 'h':\n         case 'H':\n         case 'K':\n         case 'k':\n             return 'hour';\n         // Minute\n         case 'm':\n             return 'minute';\n         // Second\n         case 's':\n         case 'S':\n         case 'A':\n             return 'second';\n         default:\n             throw new RangeError('Invalid range pattern token');\n     }\n }\n function processDateTimePattern(pattern, result) {\n     var literals = [];\n     // Use skeleton to populate result, but use mapped pattern to populate pattern\n     var pattern12 = pattern\n         // Double apostrophe\n         .replace(/'{2}/g, '{apostrophe}')\n         // Apostrophe-escaped\n         .replace(/'(.*?)'/g, function (_, literal) {\n         literals.push(literal);\n         return \"$$\".concat(literals.length - 1, \"$$\");\n     })\n         .replace(DATE_TIME_REGEX, function (m) { return matchSkeletonPattern(m, result || {}); });\n     //Restore literals\n     if (literals.length) {\n         pattern12 = pattern12\n             .replace(/\\$\\$(\\d+)\\$\\$/g, function (_, i) {\n             return literals[+i];\n         })\n             .replace(/\\{apostrophe\\}/g, \"'\");\n     }\n     // Handle apostrophe-escaped things\n     return [\n         pattern12\n             .replace(/([\\s\\uFEFF\\xA0])\\{ampm\\}([\\s\\uFEFF\\xA0])/, '$1')\n             .replace('{ampm}', '')\n             .replace(expPatternTrimmer, ''),\n         pattern12,\n     ];\n }\n exports.processDateTimePattern = processDateTimePattern;\n /**\n  * Parse Date time skeleton into Intl.DateTimeFormatOptions\n  * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n  * @public\n  * @param skeleton skeleton string\n  */\n function parseDateTimeSkeleton(skeleton, rawPattern, rangePatterns, intervalFormatFallback) {\n     if (rawPattern === void 0) { rawPattern = skeleton; }\n     var result = {\n         pattern: '',\n         pattern12: '',\n         skeleton: skeleton,\n         rawPattern: rawPattern,\n         rangePatterns: {},\n         rangePatterns12: {},\n     };\n     if (rangePatterns) {\n         for (var k in rangePatterns) {\n             var key = skeletonTokenToTable2(k);\n             var rawPattern_1 = rangePatterns[k];\n             var intervalResult = {\n                 patternParts: [],\n             };\n             var _a = processDateTimePattern(rawPattern_1, intervalResult), pattern_1 = _a[0], pattern12_1 = _a[1];\n             result.rangePatterns[key] = (0, tslib_1.__assign)((0, tslib_1.__assign)({}, intervalResult), { patternParts: splitRangePattern(pattern_1) });\n             result.rangePatterns12[key] = (0, tslib_1.__assign)((0, tslib_1.__assign)({}, intervalResult), { patternParts: splitRangePattern(pattern12_1) });\n         }\n     }\n     if (intervalFormatFallback) {\n         var patternParts = splitFallbackRangePattern(intervalFormatFallback);\n         result.rangePatterns.default = {\n             patternParts: patternParts,\n         };\n         result.rangePatterns12.default = {\n             patternParts: patternParts,\n         };\n     }\n     // Process skeleton\n     skeleton.replace(DATE_TIME_REGEX, function (m) { return matchSkeletonPattern(m, result); });\n     var _b = processDateTimePattern(rawPattern), pattern = _b[0], pattern12 = _b[1];\n     result.pattern = pattern;\n     result.pattern12 = pattern12;\n     return result;\n }\n exports.parseDateTimeSkeleton = parseDateTimeSkeleton;\n function splitFallbackRangePattern(pattern) {\n     var parts = pattern.split(/(\\{[0|1]\\})/g).filter(Boolean);\n     return parts.map(function (pattern) {\n         switch (pattern) {\n             case '{0}':\n                 return {\n                     source: ecma402_abstract_1.RangePatternType.startRange,\n                     pattern: pattern,\n                 };\n             case '{1}':\n                 return {\n                     source: ecma402_abstract_1.RangePatternType.endRange,\n                     pattern: pattern,\n                 };\n             default:\n                 return {\n                     source: ecma402_abstract_1.RangePatternType.shared,\n                     pattern: pattern,\n                 };\n         }\n     });\n }\n exports.splitFallbackRangePattern = splitFallbackRangePattern;\n function splitRangePattern(pattern) {\n     var PART_REGEX = /\\{(.*?)\\}/g;\n     // Map of part and index within the string\n     var parts = {};\n     var match;\n     var splitIndex = 0;\n     while ((match = PART_REGEX.exec(pattern))) {\n         if (!(match[0] in parts)) {\n             parts[match[0]] = match.index;\n         }\n         else {\n             splitIndex = match.index;\n             break;\n         }\n     }\n     if (!splitIndex) {\n         return [\n             {\n                 source: ecma402_abstract_1.RangePatternType.startRange,\n                 pattern: pattern,\n             },\n         ];\n     }\n     return [\n         {\n             source: ecma402_abstract_1.RangePatternType.startRange,\n             pattern: pattern.slice(0, splitIndex),\n         },\n         {\n             source: ecma402_abstract_1.RangePatternType.endRange,\n             pattern: pattern.slice(splitIndex),\n         },\n     ];\n }\n exports.splitRangePattern = splitRangePattern;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_splitRangePattern = module.exports.splitRangePattern;\n_splitFallbackRangePattern = module.exports.splitFallbackRangePattern;\n_parseDateTimeSkeleton = module.exports.parseDateTimeSkeleton;\n_processDateTimePattern = module.exports.processDateTimePattern;\n\n}, () => ({\n  'tslib': _req,\n  '@formatjs/ecma402-abstract': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}