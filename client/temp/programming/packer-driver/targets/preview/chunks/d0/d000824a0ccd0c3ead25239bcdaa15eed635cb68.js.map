{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/collider/baseCollider.ts"],"names":["Collider2D","Component","Contact2DType","_decorator","ccclass","property","baseCollider","start","_handleCollider","collider","node","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","selfCollider","otherCollider","contact","name1","name","name2"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,a,OAAAA,a;AAAmCC,MAAAA,U,OAAAA,U;;;;;;;;;OAC7D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;8BAGjBG,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,SACkCL,SADlC,CAC4C;AACxCM,QAAAA,KAAK,GAAG;AACJ,eAAKC,eAAL;AACH;;AACOA,QAAAA,eAAe,GAAG;AACtB,cAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBX,UAAvB,CAAf;;AACA,cAAIS,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACG,EAAT,CAAYV,aAAa,CAACW,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACAL,YAAAA,QAAQ,CAACG,EAAT,CAAYV,aAAa,CAACa,WAA1B,EAAuC,KAAKC,YAA5C,EAA0D,IAA1D;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACWF,QAAAA,cAAc,CAACG,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAyF;AAC1G;AACA,cAAIC,KAAK,GAAGH,YAAY,CAACP,IAAb,CAAkBW,IAA9B;AACA,cAAIC,KAAK,GAAGJ,aAAa,CAACR,IAAd,CAAmBW,IAA/B;AACH;;AAEML,QAAAA,YAAY,CAACC,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAyF,CACxG;AACA;AACH;;AA3BuC,O","sourcesContent":["import { Collider2D, Component, Contact2DType, IPhysics2DContact,  _decorator } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('baseCollider')\r\nexport class baseCollider extends Component {\r\n    start() {\r\n        this._handleCollider();\r\n    }\r\n    private _handleCollider() {\r\n        let collider = this.node.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 子类重写\r\n     * @param selfCollider \r\n     * @param otherCollider \r\n     * @param contact \r\n     */\r\n    public onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        let name1 = selfCollider.node.name;\r\n        let name2 = otherCollider.node.name;\r\n    }\r\n    \r\n    public onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        // console.log('onEndContact');\r\n    }\r\n}\r\n\r\n"]}