{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/pieces/brick.ts"],"names":["_decorator","Component","tween","v3","clientEvent","Constant","getBrickIndex","ccclass","property","brick","index","_isMoving","_originPos","undefined","start","_init","_addListener","on","EVENT_TYPE","BrickMove","_evtBrickMove","onDestroy","off","idx","_playMoveUp","pos","gap","time","node","to","worldPosition","x","y","z","then","call","getWorldPosition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAsBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,E,OAAAA,E;;AACzCC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;uBAGjBS,K,WADZF,OAAO,CAAC,OAAD,C,gBAAR,MACaE,KADb,SAC2BR,SAD3B,CACqC;AAAA;AAAA;AAAA,eAC1BS,KAD0B,GACV,CADU;AAAA,eAEzBC,SAFyB,GAEJ,KAFI;AAAA,eAGzBC,UAHyB,GAGNC,SAHM;AAAA;;AAIjCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,KAAL;;AACA,eAAKC,YAAL;AACH;;AAEOA,QAAAA,YAAY,GAAG;AACnB;AAAA;AAAA,0CAAYC,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBC,SAApB,GAAgC,KAAKT,KAApD,EAA2D,KAAKU,aAAhE,EAA+E,IAA/E;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR;AAAA;AAAA,0CAAYC,GAAZ,CAAgB;AAAA;AAAA,oCAASJ,UAAT,CAAoBC,SAApB,GAAgC,KAAKT,KAArD,EAA4D,KAAKU,aAAjE,EAAgF,IAAhF;AACH;;AAEOA,QAAAA,aAAa,CAACG,GAAD,EAAM;AACvB,cAAIA,GAAG,IAAI,KAAKb,KAAhB,EAAuB;AACnB,iBAAKc,WAAL;AACH;AACJ;;AAEOA,QAAAA,WAAW,GAAG;AAClB,cAAI,KAAKb,SAAT,EAAoB;AAAE;AAAQ;;AAC9B,eAAKA,SAAL,GAAiB,IAAjB;AACA,cAAIc,GAAG,GAAG,KAAKb,UAAf,CAHkB,CAGQ;;AAC1B,cAAIc,GAAG,GAAG,CAAV;AACA,cAAIC,IAAI,GAAG,GAAX;AACAzB,UAAAA,KAAK,CAAC,KAAK0B,IAAN,CAAL,CAAiBC,EAAjB,CAAoBF,IAApB,EAA0B;AAAEG,YAAAA,aAAa,EAAE3B,EAAE,CAACsB,GAAG,CAACM,CAAL,EAAQN,GAAG,CAACO,CAAJ,GAAQN,GAAhB,EAAqBD,GAAG,CAACQ,CAAzB;AAAnB,WAA1B,EAA4EC,IAA5E,CACIhC,KAAK,CAAC,KAAK0B,IAAN,CAAL,CAAiBC,EAAjB,CAAoBF,IAApB,EAA0B;AAAEG,YAAAA,aAAa,EAAE3B,EAAE,CAACsB,GAAG,CAACM,CAAL,EAAQN,GAAG,CAACO,CAAZ,EAAeP,GAAG,CAACQ,CAAnB;AAAnB,WAA1B,EAAsEE,IAAtE,CAA2E,MAAM;AAC7E,iBAAKxB,SAAL,GAAiB,KAAjB;AACH,WAFD,EAEGG,KAFH,EADJ,EAIEA,KAJF;AAKH;;AAEOC,QAAAA,KAAK,GAAG;AACZ,eAAKL,KAAL,GAAa;AAAA;AAAA,+CAAb,CADY,CAEZ;;AACA,eAAKE,UAAL,GAAkB,KAAKgB,IAAL,CAAUQ,gBAAV,EAAlB;AACH;;AAxCgC,O","sourcesContent":["import { _decorator, Component, Animation, tween, v3, Vec3 } from 'cc';\r\nimport { clientEvent } from '../../framework/clientEvent';\r\nimport { Constant } from '../../framework/constant';\r\nimport { getBrickIndex } from '../../net/util';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('brick')\r\nexport class brick extends Component {\r\n    public index: number = 0;\r\n    private _isMoving: boolean = false;\r\n    private _originPos: Vec3 = undefined;\r\n    start() {\r\n        this._init();\r\n        this._addListener();\r\n    }\r\n\r\n    private _addListener() {\r\n        clientEvent.on(Constant.EVENT_TYPE.BrickMove + this.index, this._evtBrickMove, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.BrickMove + this.index, this._evtBrickMove, this);\r\n    }\r\n\r\n    private _evtBrickMove(idx) {\r\n        if (idx == this.index) {\r\n            this._playMoveUp();\r\n        }\r\n    }\r\n\r\n    private _playMoveUp() {\r\n        if (this._isMoving) { return }\r\n        this._isMoving = true;\r\n        let pos = this._originPos;//this.node.getPosition();\r\n        let gap = 3;\r\n        let time = 0.1;\r\n        tween(this.node).to(time, { worldPosition: v3(pos.x, pos.y + gap, pos.z) }).then(\r\n            tween(this.node).to(time, { worldPosition: v3(pos.x, pos.y, pos.z) }).call(() => {\r\n                this._isMoving = false;\r\n            }).start()\r\n        ).start();\r\n    }\r\n\r\n    private _init() {\r\n        this.index = getBrickIndex();\r\n        // this._originPos = this.node.getPosition();\r\n        this._originPos = this.node.getWorldPosition();\r\n    }\r\n}\r\n\r\n"]}