{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/roles/mario/mario.ts"],"names":["Animation","PolygonCollider2D","RigidBody2D","UITransformComponent","v2","v3","Vec3","_decorator","clientEvent","Constant","AnimMario","MarioStatus","baseCollider","brick","whyBrick","roleManager","ccclass","property","mario","_anim","undefined","_rigidbody2d","_speed","_speedHalf","_isMoving","_isLeft","_isJumping","_jumpPoint","_status","_isDeath","_lastColliderName","start","_init","_addListener","on","EVENT_TYPE","Move","_evtStartMove","Stop","_evtStop","Jump","_evtJump","MarioDeath","_evtPlayMarioDeath","onDestroy","off","MoveSpeed","_loadAnimComponent","_loadRigidBody2d","playIdle","Promise","resolve","node","getComponent","update","deltaTime","console","log","pos","getPosition","x","setPosition","setScale","idle","play","playWalk","walk","isDown","destroy","death","y","z","applyForce","Inst","updateAlivePoint","scheduleOnce","dispatchEvent","TranslateScenes","playSwim","swim","playJump","jump","handleColliderUp","onBeginContact","selfCollider","otherCollider","contact","name1","name","name2","includes","FinishedGame","_check_gameOver","bk","points","getWorldManifold","length","cPos","bPos","getWorldPosition","BrickMove","index","mar","TopWhy","ut","height"],"mappings":"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","sourcesContent":["import { Animation, BoxCollider2D, Collider2D, Component, IPhysics2DContact, PolygonCollider2D, RigidBody2D, tween, UITransformComponent, v2, v3, Vec3, _decorator } from 'cc';\r\nimport { clientEvent } from '../../../framework/clientEvent';\r\nimport { Constant } from '../../../framework/constant';\r\nimport { AnimMario, MarioStatus } from '../../../framework/enum';\r\nimport { baseCollider } from '../../collider/baseCollider';\r\nimport { brick } from '../../pieces/brick';\r\nimport { whyBrick } from '../../pieces/whyBrick';\r\nimport { roleManager } from '../roleManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('mario')\r\nexport class mario extends baseCollider {\r\n    private _anim: Animation = undefined;\r\n    private _rigidbody2d: RigidBody2D = undefined;\r\n    private _speed: number = -1;\r\n    private _speedHalf:number = 0.5;\r\n    private _isMoving: boolean = false;\r\n    private _isLeft: boolean = false;\r\n    private _isJumping: boolean = false;\r\n    private _jumpPoint: Vec3 = new Vec3();\r\n    private _status: number = 0;\r\n    private _isDeath: boolean = false;\r\n    private _lastColliderName:string = \"\";\r\n    start() {\r\n        super.start();\r\n        this._init();\r\n        this._addListener();\r\n    }\r\n\r\n    private _addListener() {\r\n        clientEvent.on(Constant.EVENT_TYPE.Move, this._evtStartMove, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.Stop, this._evtStop, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.Jump, this._evtJump, this);\r\n        clientEvent.on(Constant.EVENT_TYPE.MarioDeath, this._evtPlayMarioDeath, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        clientEvent.off(Constant.EVENT_TYPE.Move, this._evtStartMove, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.Stop, this._evtStop, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.Jump, this._evtJump, this);\r\n        clientEvent.off(Constant.EVENT_TYPE.MarioDeath, this._evtPlayMarioDeath, this);\r\n    }\r\n\r\n    private _init() {\r\n        this._speed = Constant.MoveSpeed / 2;\r\n        this._loadAnimComponent();\r\n        this._loadRigidBody2d();\r\n        this.playIdle();\r\n    }\r\n    private _loadAnimComponent() {\r\n        return new Promise(resolve => {\r\n            this._anim = this.node.getComponent(Animation);\r\n            resolve(null);\r\n        });\r\n    }\r\n    private _loadRigidBody2d() {\r\n        return new Promise(resolve => {\r\n            this._rigidbody2d = this.node.getComponent(RigidBody2D);\r\n            resolve(null);\r\n        });\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if(this._isMoving){\r\n            console.log(deltaTime);\r\n            let pos = this.node.getPosition();\r\n            pos.x += deltaTime*this._speed*10;\r\n            this.node.setPosition(pos);\r\n            this.node.setScale(v3(this._speed,1,1));\r\n        }\r\n        // if (this._isDeath) return;\r\n        // if(Constant.FinishedGame){\r\n        //     this._speed = this._speedHalf;\r\n        // }\r\n        // //移动状态\r\n        // let pos = this.node.getPosition();\r\n        // if (this._isMoving) {\r\n        //     let scale = this.node.getScale();\r\n        //     let offset = 0;\r\n        //     if (this._isLeft) {\r\n        //         pos.x -= this._speed;\r\n        //         offset = -this._speed;\r\n        //         scale.x = -Math.abs(scale.x);\r\n        //     }\r\n        //     else {\r\n        //         offset = +this._speed;\r\n        //         pos.x += this._speed;\r\n        //         scale.x = Math.abs(scale.x);\r\n        //     }\r\n        //     if (pos.x <= 8) { pos.x = 8; }\r\n        //     if(pos.x>=Constant.CurMapWidth - 8){pos.x = Constant.CurMapWidth - 8;}\r\n        //     this.node.setPosition(pos);\r\n        //     this.node.setScale(scale);\r\n        //     clientEvent.dispatchEvent(Constant.EVENT_TYPE.MoveCamera, [pos, offset]);\r\n        // }\r\n        // if (pos.y < -40) {\r\n        //     this._evtPlayMarioDeath(true);\r\n        //     return;\r\n        // }\r\n        // //起跳状态\r\n        // if (this._isJumping) {\r\n        //     let pos = this.node.getPosition();\r\n        //     if (pos.y <= this._jumpPoint.y + 1) {\r\n        //         this._isJumping = false;\r\n\r\n        //         if (!this._isMoving) {\r\n        //             this.playIdle();\r\n        //         }\r\n        //         else {\r\n        //             this.playWalk();\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n    async playIdle() {\r\n        if (this._isDeath) return;\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        this._status = MarioStatus.idle;\r\n        this._isJumping = false;\r\n        this._anim.play(AnimMario.idle);\r\n    }\r\n    async playWalk() {\r\n        if (this._isDeath) return;\r\n        if (this._status == MarioStatus.walk) return;\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        this._status = MarioStatus.walk;\r\n        this._anim.play(AnimMario.walk);\r\n    }\r\n    async _evtPlayMarioDeath(isDown: boolean = false) {\r\n        if (this._isDeath) return;\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        this.node.getComponent(PolygonCollider2D).destroy();\r\n        this._status = MarioStatus.death;\r\n        this._anim.play(AnimMario.death);\r\n        this._isDeath = true;\r\n        let pos = this.node.getPosition();\r\n        this.node.setPosition(v3(pos.x, pos.y + 2, pos.z));\r\n        if (isDown) {\r\n            this._rigidbody2d.applyForce(v2(0, 2800), v2(0, 0), true);\r\n        }\r\n        else {\r\n            this._rigidbody2d.applyForce(v2(0, 1300), v2(0, 0), true);\r\n        }\r\n        //刷新复活点\r\n        roleManager.Inst.updateAlivePoint(pos)\r\n        //先让他复活\r\n        this.scheduleOnce(() => {\r\n            this.node.destroy();\r\n            // roleManager.Inst.addMarioToMap();\r\n            clientEvent.dispatchEvent(Constant.EVENT_TYPE.TranslateScenes);\r\n        }, 2);\r\n    }\r\n    async playSwim() {\r\n        if (this._isDeath) return;\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        this._status = MarioStatus.swim;\r\n        this._anim.play(AnimMario.swim);\r\n    }\r\n\r\n    async playJump() {\r\n        if (this._isDeath) return;\r\n        if (!this._anim) {\r\n            await this._loadAnimComponent();\r\n        }\r\n        let pos = this.node.getPosition();\r\n        this._jumpPoint = pos;\r\n        this._status = MarioStatus.jump;\r\n        this._anim.play(AnimMario.jump);\r\n    }\r\n\r\n    /**\r\n     * 左右移动\r\n     * @param pos \r\n     */\r\n    private _evtStartMove(pos: Vec3) {\r\n        if (!this._isMoving || this._status != MarioStatus.walk) {\r\n            this.playWalk();\r\n        }\r\n        this._isMoving = true;\r\n        this._isLeft = false;\r\n        if (pos.x < 0) {\r\n            this._isLeft = true;\r\n        }\r\n        this._speed = pos.x < 0 ? -1 :1;\r\n    }\r\n    private _evtStop() {\r\n        this._isMoving = false;\r\n        this.playIdle();\r\n    }\r\n\r\n    /**\r\n     * 跳，给一个向上的force\r\n     */\r\n    private async _evtJump() {\r\n        if (!this._rigidbody2d) {\r\n            await this._loadRigidBody2d();\r\n        }\r\n        if (this._isJumping) {\r\n            return;\r\n        }\r\n        this._isJumping = true;\r\n        this.playJump();\r\n        let pos = this.node.getPosition();\r\n        this.node.setPosition(v3(pos.x, pos.y + 2, pos.z));\r\n        this._rigidbody2d.applyForce(v2(0, 950), v2(0, 0), true);\r\n    }\r\n\r\n    /**\r\n     * 与砖头上面接触\r\n     */\r\n    handleColliderUp() {\r\n        this._isJumping = false;\r\n        if (this._isMoving) {\r\n            this.playWalk();\r\n        }\r\n        else {\r\n            this.playIdle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 碰撞检测\r\n     * @param selfCollider  \r\n     * @param otherCollider \r\n     * @param contact \r\n     */\r\n    public onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        let name1 = selfCollider.node.name;\r\n        let name2 = otherCollider.node.name;\r\n        if(name2 == this._lastColliderName)return;\r\n        this._lastColliderName = name2;\r\n        if(name2.includes(\"tower\")){\r\n        }\r\n        if(Constant.FinishedGame)return;\r\n        if(name2.includes(\"flag\")){\r\n            this._check_gameOver();\r\n        }\r\n\r\n        if (name1.includes(\"mario\") && name2.includes(\"wall\")) {\r\n            let bk: brick = otherCollider.node.getComponent(brick);\r\n            let points = contact.getWorldManifold().points;\r\n            if (bk) {\r\n                if (points.length > 0) {\r\n                    let cPos = points[0];\r\n                    let bPos = otherCollider.node.getWorldPosition();\r\n                    if (cPos.y <= bPos.y - 8) {\r\n                        clientEvent.dispatchEvent(Constant.EVENT_TYPE.BrickMove + bk.index, bk.index);\r\n                    }\r\n                    else if (cPos.y >= bPos.y + 8) {\r\n                        let mar = selfCollider.node.getComponent(mario);\r\n                        mar.handleColliderUp();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (name1.includes(\"mario\") && name2.includes(\"coin\")) {\r\n            let bk: whyBrick = otherCollider.node.getComponent(whyBrick);\r\n            let points = contact.getWorldManifold().points;\r\n            if (bk) {\r\n                if (points.length > 0) {\r\n                    let cPos = points[0];\r\n                    let bPos = otherCollider.node.getWorldPosition();\r\n                    if (cPos.y <= bPos.y - 8) {\r\n                        clientEvent.dispatchEvent(Constant.EVENT_TYPE.TopWhy + bk.index, bk.index);\r\n                    }\r\n                    else if (cPos.y >= bPos.y + 8) {\r\n                        let mar = selfCollider.node.getComponent(mario);\r\n                        mar.handleColliderUp();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (name1.includes(\"mario\") && name2.includes(\"hole\")) {\r\n            let ut = otherCollider.node.getComponent(UITransformComponent);\r\n            let points = contact.getWorldManifold().points;\r\n            if (ut) {\r\n                if (points.length > 0) {\r\n                    let cPos = points[0];\r\n                    let bPos = otherCollider.node.getWorldPosition();\r\n                    if (cPos.y >= bPos.y + ut.height / 2) {\r\n                        let mar = selfCollider.node.getComponent(mario);\r\n                        mar.handleColliderUp();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (name1.includes(\"mario\") && name2.includes(\"ladder\")) {\r\n            let mar = selfCollider.node.getComponent(mario);\r\n            mar.handleColliderUp();\r\n        }\r\n    }\r\n\r\n    private _check_gameOver(){\r\n        console.log(\"finished_game\");\r\n        Constant.FinishedGame = true;\r\n        clientEvent.dispatchEvent(Constant.EVENT_TYPE.FinishedGame);\r\n        // this.playIdle();\r\n        // this.scheduleOnce(()=>{\r\n        //     this.playWalk();\r\n        //     let pos = this.node.getPosition();\r\n        //     let nPos = v3(pos.x+270,20.7,pos.z);\r\n        //     tween(this.node).to(2,{position:nPos}).call(()=>{}).start();\r\n        // },1);\r\n    }\r\n}\r\n\r\n"]}