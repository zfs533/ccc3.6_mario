{"version":3,"sources":["file:///E:/CocosCreator/git/mario/client/assets/script/game/roles/enemy/enemy.ts"],"names":["_decorator","Animation","baseCollider","ccclass","property","enemy","speed","normalX","isDeath","anims","walk","death","start","onDestroy","onBeginContact","selfCollider","otherCollider","contact","name1","node","name","name2","includes","normal","getWorldManifold","startMoving","x","offset","update","deltaTime","pos","getPosition","setPosition","playDeath","getComponent","play","scheduleOnce","destroy"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAC9B;AACA;AACA;;uBAEaK,K,WADZF,OAAO,CAAC,OAAD,C,gBAAR,MACaE,KADb;AAAA;AAAA,wCACwC;AAAA;AAAA;AAAA,eAC7BC,KAD6B,GACb,CADa;AAAA,eAE7BC,OAF6B,GAEX,CAFW;AAAA,eAG7BC,OAH6B,GAGV,KAHU;AAAA,eAI7BC,KAJ6B,GAIrB;AACXC,YAAAA,IAAI,EAAE,QADK;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAJqB;AAAA;;AAQpCC,QAAAA,KAAK,GAAG;AACJ,gBAAMA,KAAN;AAEH;;AAEDC,QAAAA,SAAS,GAAG,CACX;;AAEMC,QAAAA,cAAc,CAACC,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAyF;AAC1G,cAAI,KAAKT,OAAT,EAAkB,OADwF,CAE1G;;AACA,cAAIU,KAAK,GAAGH,YAAY,CAACI,IAAb,CAAkBC,IAA9B;AACA,cAAIC,KAAK,GAAGL,aAAa,CAACG,IAAd,CAAmBC,IAA/B;;AACA,cAAIF,KAAK,CAACI,QAAN,CAAe,OAAf,CAAJ,EAA6B;AACzB,gBAAIC,MAAM,GAAGN,OAAO,CAACO,gBAAR,GAA2BD,MAAxC;AACA,iBAAKE,WAAL,CAAiBF,MAAM,CAACG,CAAxB;AACH;AACJ;;AAEMD,QAAAA,WAAW,CAACE,MAAD,EAAiB;AAC/B,cAAIA,MAAM,IAAI,KAAKpB,OAAnB,EAA4B;AACxB,iBAAKD,KAAL,IAAc,CAAC,CAAf;AACA,iBAAKC,OAAL,GAAeoB,MAAf;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAI,KAAKrB,OAAT,EAAkB;AAClB,cAAIsB,GAAG,GAAG,KAAKX,IAAL,CAAUY,WAAV,EAAV;AACAD,UAAAA,GAAG,CAACJ,CAAJ,IAAS,KAAKpB,KAAd;AACA,eAAKa,IAAL,CAAUa,WAAV,CAAsBF,GAAtB;AACH;;AAEMG,QAAAA,SAAS,GAAG;AACf,eAAKzB,OAAL,GAAe,IAAf;AACA,eAAKW,IAAL,CAAUe,YAAV,CAAuBjC,SAAvB,EAAkCkC,IAAlC,CAAuC,KAAK1B,KAAL,CAAWE,KAAlD;AACA,eAAKyB,YAAL,CAAkB,MAAM;AACpB,iBAAKjB,IAAL,CAAUkB,OAAV;AACH,WAFD,EAEG,GAFH;AAGH;;AA/CmC,O","sourcesContent":["import { _decorator, Animation, Node, Collider2D, IPhysics2DContact, RigidBody2D, BoxCollider2D } from 'cc';\r\nimport { baseCollider } from '../../collider/baseCollider';\r\nconst { ccclass, property } = _decorator;\r\n/**\r\n * 怪物基类\r\n */\r\n@ccclass('enemy')\r\nexport class enemy extends baseCollider {\r\n    public speed: number = 1;\r\n    public normalX: number = 0;\r\n    public isDeath: boolean = false;\r\n    public anims = {\r\n        walk: \"e1walk\",\r\n        death: \"e1death\",\r\n    }\r\n    start() {\r\n        super.start();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n    }\r\n\r\n    public onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        if (this.isDeath) return;\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        let name1 = selfCollider.node.name;\r\n        let name2 = otherCollider.node.name;\r\n        if (name1.includes(\"enemy\")) {\r\n            let normal = contact.getWorldManifold().normal;\r\n            this.startMoving(normal.x);\r\n        }\r\n    }\r\n\r\n    public startMoving(offset: number) {\r\n        if (offset != this.normalX) {\r\n            this.speed *= -1;\r\n            this.normalX = offset;\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this.isDeath) return;\r\n        let pos = this.node.getPosition();\r\n        pos.x += this.speed;\r\n        this.node.setPosition(pos);\r\n    }\r\n\r\n    public playDeath() {\r\n        this.isDeath = true;\r\n        this.node.getComponent(Animation).play(this.anims.death)\r\n        this.scheduleOnce(() => {\r\n            this.node.destroy();\r\n        }, 0.5);\r\n    }\r\n}\r\n\r\n"]}