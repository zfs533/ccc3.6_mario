{"version":3,"sources":["file:///D:/CocosDashboard/resources/.editors/Creator/3.6.0/resources/app.asar.unpacked/modules/editor-extensions/extensions/localization-editor/node_modules/@formatjs/intl-relativetimeformat/node_modules/@formatjs/ecma402-abstract/NumberFormat/ToRawPrecision.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","ToRawPrecision","utils_1","x","minPrecision","maxPrecision","p","m","e","xFinal","repeat","xToString","toString","xToStringExponentIndex","indexOf","_a","split","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","replace","length","getMagnitude","decimalPlaceOffset","n","Math","round","adjustDecimalPlace","floor","int","concat","slice","cut","formattedString","roundedNumber","integerDigitsCount","magnitude","pow","_cjsExports","___esModule","__esModule","_ToRawPrecision"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../utils';\nlet _cjsExports;\nlet ___esModule;\nlet _ToRawPrecision;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.ToRawPrecision = void 0;\n var utils_1 = require(\"../utils\");\n function ToRawPrecision(x, minPrecision, maxPrecision) {\n     var p = maxPrecision;\n     var m;\n     var e;\n     var xFinal;\n     if (x === 0) {\n         m = (0, utils_1.repeat)('0', p);\n         e = 0;\n         xFinal = 0;\n     }\n     else {\n         var xToString = x.toString();\n         // If xToString is formatted as scientific notation, the number is either very small or very\n         // large. If the precision of the formatted string is lower that requested max precision, we\n         // should still infer them from the formatted string, otherwise the formatted result might have\n         // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n         var xToStringExponentIndex = xToString.indexOf('e');\n         var _a = xToString.split('e'), xToStringMantissa = _a[0], xToStringExponent = _a[1];\n         var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n         if (xToStringExponentIndex >= 0 &&\n             xToStringMantissaWithoutDecimalPoint.length <= p) {\n             e = +xToStringExponent;\n             m =\n                 xToStringMantissaWithoutDecimalPoint +\n                     (0, utils_1.repeat)('0', p - xToStringMantissaWithoutDecimalPoint.length);\n             xFinal = x;\n         }\n         else {\n             e = (0, utils_1.getMagnitude)(x);\n             var decimalPlaceOffset = e - p + 1;\n             // n is the integer containing the required precision digits. To derive the formatted string,\n             // we will adjust its decimal place in the logic below.\n             var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n             // The rounding caused the change of magnitude, so we should increment `e` by 1.\n             if (adjustDecimalPlace(n, p - 1) >= 10) {\n                 e = e + 1;\n                 // Divide n by 10 to swallow one precision.\n                 n = Math.floor(n / 10);\n             }\n             m = n.toString();\n             // Equivalent of n * 10 ** (e - p + 1)\n             xFinal = adjustDecimalPlace(n, p - 1 - e);\n         }\n     }\n     var int;\n     if (e >= p - 1) {\n         m = m + (0, utils_1.repeat)('0', e - p + 1);\n         int = e + 1;\n     }\n     else if (e >= 0) {\n         m = \"\".concat(m.slice(0, e + 1), \".\").concat(m.slice(e + 1));\n         int = e + 1;\n     }\n     else {\n         m = \"0.\".concat((0, utils_1.repeat)('0', -e - 1)).concat(m);\n         int = 1;\n     }\n     if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n         var cut = maxPrecision - minPrecision;\n         while (cut > 0 && m[m.length - 1] === '0') {\n             m = m.slice(0, -1);\n             cut--;\n         }\n         if (m[m.length - 1] === '.') {\n             m = m.slice(0, -1);\n         }\n     }\n     return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n     // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n     function adjustDecimalPlace(x, magnitude) {\n         return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n     }\n }\n exports.ToRawPrecision = ToRawPrecision;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_ToRawPrecision = module.exports.ToRawPrecision;\n\n}, () => ({\n  '../utils': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}